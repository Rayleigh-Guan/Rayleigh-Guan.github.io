<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Immutable-X</title>
      <link href="/2021/11/11/Immutable-X/"/>
      <url>/2021/11/11/Immutable-X/</url>
      
        <content type="html"><![CDATA[<h1 id="Immutable-X"><a href="#Immutable-X" class="headerlink" title="Immutable-X"></a>Immutable-X</h1><h2 id="项目介绍："><a href="#项目介绍：" class="headerlink" title="项目介绍："></a>项目介绍：</h2><p>Immutable X 是由卡牌游戏 Gods Unchained 背后开发公司推出的以太坊上针对NFT的第一个Layer2 扩容解决方案【无任何官方文档声称自己支持元宇宙】。</p><p>采用的Layer2方案是与StarkWare合作开发的zk rollups，是以太坊第一个使用zk rollups的Layer2协议。目前拓展至Volition，允许用户在Validium和ZK-rollups进行自由选择【区别在于数据是链上还是链下存储，但实质上链下存储引入数据委员会也是牺牲了去中心化，不知道为什么不提这个缺点】。并且ImmutableX认为validium的线下存储可以提供远比ZK-rollups的大得多的拓展性。</p><span id="more"></span> <h2 id="设计初衷："><a href="#设计初衷：" class="headerlink" title="设计初衷："></a>设计初衷：</h2><p>为了解决以太坊中NFT生态系统存在的诸多问题[1]：</p><p>1、NFT交易难以形成规模化，目前以太坊中NFT交易的TPS只有3-5笔/秒。</p><p>2、NFT的交易确认时间长，一般要等待几分钟，导致用户体验差。</p><p>3、gas费高导致交易成本高，目前一笔NFT交易的费用普遍在30美元以上。</p><p>4、交易成本高导致NFT流动性很差，大多数以太坊上的NFT从未被交易过。</p><p>5、以太坊目前针对开发者体验的优化不好，目前NFT项目开发者更多的时间花费在实现技术上，而不是改善他们的项目。</p><p>Immutable X认为在它们之间能够彻底解决这些问题的唯一方法是牺牲去中心化，通常是将交易转移到一个不太安全的区块链或侧链（但实质上侧链是和以太坊在竞争，而不是扩大以太坊的规模）。</p><h2 id="实现技术："><a href="#实现技术：" class="headerlink" title="实现技术："></a>实现技术：</h2><p>Volition：允许用户在Validium和ZK-rollups进行自由选择。</p><p>没有选择Optimistic rollups是因为Immutable X认为：</p><p>1、Optimistic rollups的提款周期太长有1-2周。</p><p>2、虽然可以利用流动性池对同质化代币实现快速提款，但是对于NFT这种非同质化货币是无法实现快速提款的</p><p>3、欺诈证明本身就存在缺点。</p><p>在 Tik Tok 与 Immutable 的合作博客文章中，Tik Tok 特别提到了 StarkWare 是第一个碳中和的 L2 拓展解决方案。 在传统互联网公司的视角里，环保是很重要的，不环保是很容易受到抨击的，因此 L2 高性能和节约资源的特性也能吸引传统互联网公司的目光，给他们铺平道路，光明正大入局加密货币领域。</p><p>特点：</p><p>1、支持市场、游戏和应用</p><p>2、0 gas</p><p>3、资产即时交易</p><p>4、利用提供的可以API在数小时内建立NFT业务</p><p>5、Set your own trading fees.</p><p>6、没有托管风险；用户保留他们的私钥。</p><p>7、Not a centralized sidechain.，Secured by Ethereum. A true L2 inheriting security of L1</p><p>着重特点：</p><p>1、解锁大规模的规模：<br>我们的引擎支持每秒超过9,000个交易，比原生限制提高了600倍。</p><p>2、零燃气费<br>消除经济限制。你和你的用户都不会为铸造或交换资产支付气体费用。</p><p>3、用户维护的托管<br>我们向以太坊提交零知识证明，因此用户将始终能够验证和提取他们的资产。【安全性是依赖于主链的】</p><p>4、从玩到赚的准备<br>不要让创建和交换资产的费用限制你能做的事情。我们的定价对所有元系统来说都是负担得起和透明的。</p><p>5、即时交易<br>在Immutable上铸造、购买、出售和转让资产比你阅读这句话的时间还要快。</p><p>6、侧链很糟糕<br>与侧链不同，我们不是由中央运营商控制，可以很容易地被攻击（51%）和赎回，我们也不需要一个新的代币来使用。</p><p>7、Metadata Orders</p><p>Trustlessly place buy orders which can be filled by any NFT with certain properties e.g. any Diamond GU card.</p><p>8、Carbon Neutral NFTs</p><p>All NFTs traded on Immutable X are completely carbon neutral, offsetting the carbon footprint with certified climate conscious partners, <a href="https://www.our-trace.com/brand/immutable">Trace</a> and <a href="https://www.cooleffect.org/">Cool Effect</a>.</p><h2 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h2><p>[1]<a href="https://immutablex.medium.com/explainer-on-how-our-design-architecture-powers-the-future-of-nfts-c05a9efc19fd">https://immutablex.medium.com/explainer-on-how-our-design-architecture-powers-the-future-of-nfts-c05a9efc19fd</a> [Immutable]</p><p>[2]<a href="https://medium.com/starkware/validity-proofs-vs-fraud-proofs-strike-back-4d0bf90eed15">https://medium.com/starkware/validity-proofs-vs-fraud-proofs-strike-back-4d0bf90eed15</a> [欺诈证明缺点及对比]</p><p>[3]<a href="https://cryptoticker.io/cn/%E4%BB%80%E4%B9%88%E6%98%AFimmutable-x%EF%BC%88imx%EF%BC%89%EF%BC%9F%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0%E5%B8%A6%E4%BD%A0%E4%BA%86%E8%A7%A3%E5%AE%83/">https://cryptoticker.io/cn/%E4%BB%80%E4%B9%88%E6%98%AFimmutable-x%EF%BC%88imx%EF%BC%89%EF%BC%9F%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0%E5%B8%A6%E4%BD%A0%E4%BA%86%E8%A7%A3%E5%AE%83/</a></p><p>[4]<a href="https://www.immutable.com/">https://www.immutable.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> 调研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Layer2落地方案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Layer2技术方案调研</title>
      <link href="/2021/11/11/layer2/"/>
      <url>/2021/11/11/layer2/</url>
      
        <content type="html"><![CDATA[<h2 id="Layer的概念："><a href="#Layer的概念：" class="headerlink" title="Layer的概念："></a>Layer的概念：</h2><p>Layer是借鉴计算机网络通信体系架构的OSI模型，将区块链逻辑机构分为三层—-Layer0、Layer1、Layer2。</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211110/image.382fn8iditm0.png" alt="image"></p><span id="more"></span>  <h2 id="为什么需要扩容："><a href="#为什么需要扩容：" class="headerlink" title="为什么需要扩容："></a>为什么需要扩容：</h2><p>目前区块链系统普遍存在严重的性能可扩展性瓶颈：交易吞吐量不足。</p><h2 id="当前不同层次的扩容方案："><a href="#当前不同层次的扩容方案：" class="headerlink" title="当前不同层次的扩容方案："></a>当前不同层次的扩容方案：</h2><p>Layer0的扩容方案是通过优化区块链底层数据传输协议提升区块链性能，不改变区块链的上层架构，是一种保留原有链生态规则的性能提升方案。</p><p>Layer1的扩容方案即链上（On-Chain）扩容，通过优化、改进公链基本协议提升区块链性能。</p><p>Layer2的扩容方案即链下（Off-Chain）扩容，不改变公链基本协议，本质是将原本由以太坊执行的计算<strong>转移到了链下</strong>，将以太坊作为安全性保障。由于计算被转移到了链下，需要存储在链上的数据量大幅减少，在降低交易成本的同时加快了交易速度。</p><p>通过Layer2可以：</p><p>为主链拓展性能：Layer2 的解决方案将复杂的交易运算打包到了链下进行运算，然后将运算结果反馈给链上；通过在链下将复杂交易的计算完成，大大提高了交易速度，同时由于链上只运算交易结果，从而实现了低 gas 费的交易结果。</p><p>为主链拓展功能：Layer2 由于可以将更多更复杂的需求转移到链下进行，于是由于之前区块链主网发展的限制性，导致主网不能实现的一些功能都可以通过 Layer2 的方式在链下进行功能的扩展，这是 Layer2 生态位能够在 ETH2.0 升级之后能够存在的核心价值点和竞争力。</p><h3 id="常见的扩容方案："><a href="#常见的扩容方案：" class="headerlink" title="常见的扩容方案："></a>常见的扩容方案：</h3><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211110/image.4gwr2iqmd120.png" alt="image"></p><h2 id="Layer2的常见扩容方案："><a href="#Layer2的常见扩容方案：" class="headerlink" title="Layer2的常见扩容方案："></a>Layer2的常见扩容方案：</h2><h3 id="状态通道（State-channels）："><a href="#状态通道（State-channels）：" class="headerlink" title="状态通道（State channels）："></a>状态通道（State channels）：</h3><p>状态通道的工作原理是链下开辟一个通道，用户通过在智能合约中锁定资产的方式，将链上资产转移到通道中，并在通道中进行资产交互。在通道内进行资产交互操作不会占用主链的资源，且无需耗费昂贵的交易费用，<strong>适用于一些高频小额支付场景</strong>，比如游戏场景。用户在离开通道时进行结算，再资产将转回主链。</p><p>状态通道可以认为是闪电网络（lightning network）等支付通道泛化出来的形式，它们不仅可用于支付，还可用于在区块链上进行任意的“状态更新”，就像在智能合约内部进行更改一样。</p><p>状态通道的基本流程：</p><ol><li>区块链的部分状态通过多个签名和部分智能合约锁定，所以这部分参与者必须要完全同意对方去更新它。</li><li>参与者通过产生以及签名转账来自己更新状态，这最终会上传到区块链上，而不是直接在链上进行计算。每个新的更新会刷新之前的更新。</li><li>最终，参与者将状态传回到区块链上，然后关闭状态通道，并且再次锁定状态(通常是按照和开始不同的设置)。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211110/image.6xqv26v296c0.png" alt="image"></p><h4 id="特性和限制："><a href="#特性和限制：" class="headerlink" title="特性和限制："></a>特性和限制：</h4><p>1、需要质疑时间：</p><p>​     想象Bob并没有给合约发送真实的最终状态，而是发送一份之前他赢了Alice的状态。但是合约本身无法知晓这是否是最新的状态。而质疑时间给了Alice一个机会向 合约证明Bob对最终状态撒了谎。如果有更近期的状态，她就会有一份已签名交易的副本，并且可以将其提供给 Judge合约。</p><p>2、状态通道依赖于有效性：</p><p>​    如果Alice在质疑时间内掉线了（可能是Bob渴望赢得奖品，破坏了她家的网络连接），她可能无法在质疑时间结束前做出回应。但是，Alice可以付费给其他人，让其保存一份她的状态副本，并作为她的权益代表，以保持系统的有效性。</p><p>3、当参与者将在长时间内交换大量状态更新时，状态通道非常有用</p><p>​      这是因为部署合约时创建一个通道会产生初始成本。但是一旦部署完成，该通道内每一个状态更新的成本都会非常低。</p><p>4、状态通道最适于有一组确定参与者的应用程序</p><p>​      这是因为合约必须始终知晓所有参与到给定通道的实体（比如，地址）。当然我们可以增加或删除用户，但是每次都需要更改合约。Uniswap 智能合约等没有明确所有者的对象无法使用状态通道</p><p>5、状态通道有很强的隐私性</p><p>​      因为一切都参与者之间的通道“内”发生，而不是公开广播并记录在链上。只有开头和结尾的交易必须公开。</p><p>6、状态通道具有即时终结性</p><p>​      这意味着只要双方都签署了一个状态更新，这个状态就可以被认为是最终状态。双方都有明确保证，如果有必要，他们可以将状态“强制执行”到链上。</p><p>7、状态通道的使用范围仅限于加入通道的用户，无法向通道外的用户发送资金</p><p>8、对接智能合约的灵活性受限制</p><p>9、<strong>通道节点需要质押金额，由于质押金额的不同，非常容易形成不同的路由瓶颈而导致转账失败</strong>。</p><p>10、交易手续费极低，从根本上比所有其他 layer2 技术的交易手续费低；水平扩展性强，加节点就能增加总系统容量，</p><p>11、<strong>应用场景的局限性。</strong>状态通道适用范围有限，其主要应用于交易双方存在大量频繁密集的交易，这种情况下，两者可以开启一个状态通道进行支付。例如 Theta 中享受视频流服务的用户需要向提供带宽的服务方每隔一段时间就需要支付带宽费用，用户观看一部电影时，可能需要很多次支付，此时为了节约交易费，双方可以通过微支付通道来降低交易费，最终用户支付的费用只需要一笔交易就可以完成结算。但是如果 1 个人与 10000人中的每个人只进行一次交易，总共 10000 次的交易，每一笔交易都要支付交易费，此时状态通道无法节省交易费，而且每一笔交易的结算仍然需要上链，因此，它对于系统TPS 的提升有限也不利于提升系统的 TPS。</p><p>12、无法适用于元宇宙交易。在元宇宙中，一个玩家并不知道何时会与那个玩家发起交易，而且玩家之间很少有高频次的交易，因此，这种情况下状态通道不可用。此外，如果是玩家的游戏装备类的NFT，买卖交易是一次性的，玩家需要即时结算后使用 NFT，这种情况下状态通道不是一个好的选择。</p><p>代表：Celer Network、雷电网络、闪电网络、Connext、Counterfactual</p><h3 id="侧链（Sidechains）："><a href="#侧链（Sidechains）：" class="headerlink" title="侧链（Sidechains）："></a>侧链（Sidechains）：</h3><p>侧链是一条独立的区块链，与主网并行且独立运行。它使用单独的共识机制，安全性不受 Layer1 保护。</p><p>比特币中侧链是一种中心化的形式，这种侧链技术牺牲了中心化和安全性，提升效率。比特币侧链引入了可行第三方，这是侧链比较大的争议问题，因此，Plasma 的是为了最小化对区块链运营商的信任问题产生的。</p><p><strong>目前的侧链技术虽然会遭受中心化的批评，但是其技术成熟度、性能方面是表现最好的。</strong></p><p>代表：SKALE Network、</p><h3 id="plasma："><a href="#plasma：" class="headerlink" title="plasma："></a>plasma：</h3><p>Plasma由Joseph Poon 和 Vitalik Buterin 提出。</p><p>Plasma 链是一条独立的区块链，锚定到以太坊主链，<strong>是一种依赖于欺诈证明 (fraud proofs) 的扩容方案，类似于 Optimistic Rollups。但与 Optimistic Rollups 不同的是，</strong>Plasma 将数据可用性保存在链下<strong>。尽管是以太坊 L2 研究的最早领域之一，</strong>Plasma 的实现未能像其他更新的扩容方案那样获得足够的吸引力</p><p><strong>Plasma 本质上是将计算和数据都转移到链下（即将资产从以太坊的主链上转移到了 Plasma 链上）</strong>，工作原理是在以太坊外先构建一条 Plasma 链，用户将资产从以太坊上转移至Plasma链，这个过程需要将主链资产发送至管理Plasma链的智能合约，随后该资产即可进入Plasma 链中进行交互。plasma子链允许拥有自己的共识协议。</p><p>在 Plasma 链中，每隔一段时间，Plasma 链的操作者（验证者、运营商或节点）就会对该时间段内Plasma链的交易进行一次批量处理并生成 Merkle 树，相当于生成一个区块。操作者会将 Merkle 树的 Merkle 根返还给主链的 plasma 智能合约作为消费记录，还会将该 Merkle树中涉及某项账户交易的 SPV 证明发送给该资产当前的所有者。</p><p>从其工作原理来看，Plasma和状态通道是有一定的相似性的。不过状态通道更多的是针对你想交易的那几个点，是两个人之间的交互，而它想要在一个大的库里面进行复杂的操作是一个很困难的事情。而 Plasma 可以在子链上进行各种形式的交易，调动智能合约，转账给多个人等等，非常灵活，不像 State Channel 一样，只有打开通道的人能用，任何人都可以随时进来。</p><p>一旦确认执行者出现欺诈行为，则智能合约会罚没他的保证金。虽然说我们可以通过错误性证明，使得提供无效承诺的执行者在主链上遭到惩罚；但如果 Plasma 的执行者拒绝在主链上公开plasma上的区块信息数据，那么用户则无法取得构造出错误承诺的错误数据，就无法提供错误性证明，所以 Plasma 就存在数据不可用的问题，进而影响资产的控制权问题和安全问题。针对这个问题，Plasma 衍生出一些相应的方案，如延长资产从 layer2 退出的时间：当出现作恶行为，就能允许大量资产从 Plasma 链退出【因此需要挑战期】。每一个在子链上的节点，如果意识到子链有可能作恶，而且他自己没办法证明子链作恶的时候，这个机制能够允许参与者退出。参与者提交他最后的一个的可信证明，有多少余额，就把这个余额提现到主链上，保证资金的安全【MVP 设置了一个优先级的设计。每一笔进入 Plasma 的交易都会有一个优先的序号，高位是区块高度，然后是交易在区块里面的次序和这个 Output UTXO 在这个交易中的次序。这样就形成了一个全局唯一的序号，所有人按照这个序号退出。】并且由于回报Layer1的是merkel 树根因此对一般性的通用智能合约的支持性不够好</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211110/image.6w5y7zipjmk0.png" alt="image"></p><p>Plasma存在的问题：</p><p>（1）退出周期比较长，因为资产要先从主链转移到 Plasma 链上，Plasma 链进行交易后生成区块，然后返还给主链；当要推出时，需要先将资产从 Plasma 链上退出，这个过程需要很长的周期；一般是 7-14 天 .</p><p>（2） Layer1 的安全性问题无法从根本上解决，由于资产从主链上先需要转移到 Plasma 链上，虽然验证的方法使用了带有奖励机制的欺诈证明方式，但仍然不能从根本上解决资产安全性的问题。</p><p>（3）并没有从根本上解决交易效率的问题，因为 Plasma 的工作机制是每隔一段时间一次批量处理并生成 Merkle 树，那么如果遇到极端的行情或者情况，大量的用户在这个时间段内发起资产的提取操作，也就意味着大量的结果会发布到主链上，主链的拥堵问题仍然面临巨大的压力。因为从根本上来说 Plasma 并没有解决交易效率本质的问题。</p><h3 id="Rollups："><a href="#Rollups：" class="headerlink" title="Rollups："></a>Rollups：</h3><p>一位化名为 Barry Whitehat 的用户在 GitHub 上公开了名为「roll_up」的方案。描述了一种新类型的第 2 层扩容解决方案：一个类似于 Plasma 的架构，并可「打包」交易，它无需依赖于对运营商的信任，打包的正确性可以通过使用一个SNARK 的链上证据来证明。</p><p>Rollup 就是将多笔交易卷起来打包一块上传给 Layer1。交易数据等在 Layer1 上发布，但执行交易在 Layer1 之外。</p><p>Rollup 方案是将链下大量的交易进行打包压缩，然后将压缩的数据发布到主链，所有发布到主链的压缩数据中包含了每笔交易的基本信息，这就保证了数据的可用性（可验证性），进而可以实现对操作者的免信任。</p><p>由于 Rollup 的解决方案是通过返还压缩数据包（包含每笔交易的基本信息）来验证其交易的真实性问题，但是我们仍然不能保证每一个笔交易都是真实的，所以其依然存在中有一个核心的安全问题。因此针对这个核心的问题，出现了三种不同的解决方案，但本质来说其实两种方案，分别是<strong>基于「有效性证明」的 ZK Rollup 、基于「欺诈证明」的 Optimistic Rollup 和基于多轮交互式「欺诈证明」的 Arbitrum Rollup</strong>。</p><p>目前有两种 Rollups：</p><p>1、ZK Rollups，全称 Zero Knowledge Rollups，将数百笔交易在链下进行捆绑打包，并生成一个加密证明，<strong>该证明会被提交和发布在 Layer1 上面</strong>。<strong>链下执行 + 通过 zk-SNARKs 验证链上数据+提交链上数据 = ZK-Rollups</strong>。即此SNARK证明存在一系列由所有者正确签名的交易，这些交易以正确的方式更新了账户余额，并使得Merkle root从旧到新。因此，运营商不可能提交无效或操纵的状态。所以可以证明从状态哈希值等于h（S1）移到状态哈希值等于h（S2）的交易中存在一系列有效的交易，并且交易与提交到链上的数据相匹配。交易验证了ZK-SNARK是正确的，并在链上存储新的哈希树根h（S2）。 重要的是，它不会在状态中存储A的全部内容，而是保存在call data数据中，以便于将来可以提取。</p><p>​    优点： 每次转账的费用很低。 比 Plasma 和 Optimistic Rollups 更快。 数据量更少带来更高的吞吐量和可扩展性。</p><p>​    缺点：1）初始设置不去中心化 (STARK 中没有初始设置，snarks需要可信初始设置), </p><p>​               2）量子计算可能构成未来的黑客威胁 (STARK 可以抗量子计算机) </p><p>​               3）生成有效性证明在计算上很昂贵。这些 zk-SNARK 会在每个区块生成，生成时间可能长达 10 分钟，而每次验证的成本高达 350,000 gas，这大约占整个区块的 3.5%（在伊斯坦布尔升级前占到了 8%）</p><p>​               4）此外，目前无法在 zk-Rollup 侧链上部署通用智能合约。目前正在开发专门的零知识虚拟机，如zkVM 和 ZEXE，但在与之交互时仍然需要大量的专门知识。在大多数情况下，zk-Rollup 限制了一般的可编程性。换句话说验证链路的构造没有一个通用的解决方案，所以目前没有很好的办法做到很广义的虚拟机逻辑，简单来说，zk-Rollup 必须对每一个用例定制；程序正确性的验证相对复杂，要对多项式 curcuit 做验证；二层打包节点负担重，成本高，计算零知识证明所需时间长，用户延迟的体验角度仍然比较差。对通用型的智能合约（例如 DeFi 应用）的支持不友好，不兼容EVM当前<strong>更适用于普通转账交易等应用场景</strong>。</p><p>基于zk-rollups的项目有：loopring，polygon，hermez，zksync。</p><p>2、Optimistic Rollups，乐观地假设所有交易都是有效的，所有的数据都存储在 Layer1 链上，因此 Optimistic Rollups 是安全和去中心化的，<strong>但是主链上的交易确认作为欺诈预防机制受到挑战期的影响， 需要很长的交易确认等待时间</strong>。</p><p>那些刷新 Layer-2 状态的交易不会在链上被验证，只让主链存储一系列的历史状态根，添加了一个新的状态的一段时间（例如 1 周）后才将新状态最终敲定，也就是数据可用性放在链下。采用错误性证明（跟 Plasma 方案一样），对提交无效状态的执行者进行惩罚。其链下 OVM 虚拟机可以支持任意智能合约逻辑的实现，与以太坊 EVM 虚拟机搭配使用，开发者就可以用 Solidity 来写码，实现 dapp 和智能合约之间的无缝互操作性。它的缺点是安全问题，只有使用 1～2 周的错误性证明挑战期才足够安全。在挑战期过去以前，没有交易能被认为是确定的。</p><p>由于 Optimistic Rollups 与以太坊主链平行运行，<strong>兼容于 EVM 和 Solidity</strong>，因此在以太坊 Layer1 上能做的事情都可以在 Optimistic Rollups 上进行，这也是和 ZK Rollup 的不同之处。<strong>链下执行 + 链上数据 + 欺诈证明 = Optimistic Rollups</strong>。</p><ul><li><strong>所有的交易数据都存储在 Layer 1 链上</strong>，意味着 Optimistic Rollups 是<strong>安全和去中心化</strong>的。</li><li></li></ul><h3 id="validium："><a href="#validium：" class="headerlink" title="validium："></a>validium：</h3><p>Validium 类似于rollups，使用像 ZK-Rollops 这样的有效性证明，但数据并不存储在以太坊 Layer 1 主链上，而是将 Layer 2 的交易数据数据存在链下，用零知识证明来保证状态转换的有效性，并设立“数据可用性委员会”来保证链下数据的可用性；这意味着每条 Validum 链每秒可以处理 10k 笔交易，多条 Validum 链可以并行运行。但同时也在一定程度上使这种方案<strong>具有托管的性质</strong>(这意味着 Validiums 的运营商可以冻结或者没收用户的资金) 。<strong>链下执行 + 零知识证明 + 链下数据 = Validiums</strong>。</p><p>使用validum的产品：deversiFi、Immutable X、Sorare。</p><h3 id="valitions："><a href="#valitions：" class="headerlink" title="valitions："></a>valitions：</h3><p><strong>Volitions</strong> 是一种混合式扩容解决方案，<strong>让用户能够在「ZK-Rollup 模式」和「Validium 模式」之间进行选择</strong>。</p><p>在实践中，这意味着 Volitions 的用户能够<strong>使交易在链下执行</strong>，同时<strong>可以选择链上数据可用性或者链下数据可用性</strong>，也即选择将数据可用性保存在以太坊 L1 链上或者在 Valildiums (链下)。</p><p>产品有：starkware【不开源】衍生出：StarkNet、StarkEx【面向去中心化交易所】、Cairo</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211111/image.1hy0s30p728w.png" alt="image"></p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211111/image.49zjf9aznce0.png" alt="image"></p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211111/image.6zahth2onjk0.png" alt="image"></p><p>Rollup 具备链上数据可用性，因此中心化程度较高，Validium 需要机构作为监管方，因此去中心化程度不够</p><p>Optimistic Rollup 的安全模型基于一个假设：至少存在1个诚实节点，会执行所有 OR 交易并在无效状态转换发布时主动提交错误性证明。由于活跃节点的数量存在上限，所以还是有可能会出现一些复杂的攻击，虽然概率非常小。另一边，零知识证明技术需要一个普遍性的可信任初始设置，因此如果该设置出现问题，ZK Rollup 的安全性也会打折扣。</p><p>ZK-SNARK 技术相对更复杂。</p><p>几乎所有在以太坊上可以执行的计算都可以在 Optimistic Rollup 上完成，包括智能合约的可组合性。ZK Rollup 目前只能进行简单的支付、转账和其他特定程序。</p><table><thead><tr><th>Layer2方案</th><th>简介</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>状态通道</td><td>链下开辟一个通道，用户通过在智能合约中锁定资产的方式，将链上资产转移到通道中，并在通道中进行资产交互</td><td>1、高吞吐量 2、低成本，适合高频小额交易 3、提款确认时间短</td><td>1、应用场景具有局限性。2、对NFT这一类非同质代币的效果较差。3、不支持公开参与，仅限于通道内用户使用，无法向通道外的用户发送资金。4、创建和结算通道的需要额外时间和成本，对于任意用户之间偶尔的一次性交易来说不划算。5、需要定期查看通道网络，或将此责任委托给其他人，以确保用户资金的安全。6、必须在开启通道时锁定资金。</td></tr><tr><td>侧链</td><td>侧链是一条独立的区块链，它与主网并行且独立运行。通过一个双向桥与主链相连。</td><td>1、技术较为成熟。2、支持通用计算，大多兼容 EVM。3、提款确认时间短</td><td>1、牺牲一定的去中心化。2、使用单独的共识机制，其安全性不使用单独的共识机制，其安全性不受 Layer 1 保护。</td></tr><tr><td>Plasma</td><td>是一条区块链，数据链下存储，使用欺诈证明解决纠纷。该方案目前基本已被放弃</td><td>1、高吞吐量，低交易成本 2、适用于任意用户之间的交易</td><td>1、资产确认时间为至少1周。2、需要定期查看该网络，或将此责任委托给其他人，以确保用户的资金安全。3、资产安全性问题无法从根本上解决。4、无法从根本上解决交易效率的问题，因为 Plasma 每隔一段时间一次批量处理并生成 Merkle 树，极端情况下，主链的拥堵问题仍然面临巨大的压力。</td></tr><tr><td>Optimistic Rollups</td><td>是一条区块链，数据链上存储，使用欺诈证明</td><td>1、有OVM，兼容于 EVM 和 Solidity，通用计算支持性好。2、交易数据都存储在 Layer 1 链上，意味着安全和去中心化。</td><td>1、资产确认时间为至少1周。2、由于活跃节点的数量存在上限，Optimistic Rollups的欺诈证明依旧可能存在风险。</td></tr><tr><td>ZK-Rollups</td><td>所有资金由主链智能合约持有，是一条区块链，数据链上存储，每个rollups区块生成零知识证明（snarks）验证交易。</td><td>1、安全性高。2、去中心化。3、资产确认时间短。</td><td>1、技术难度高。2、由于采用零知识证明通用计算支持性差，很难支持通用智能合约。3、生成零知识证明和验证零知识证明需要花费额外的计算资源和gas费，每笔交易目前测试结果需要承担273gas。4、由于生成零知识证明需要花费额外的计算资源，因此对于吞吐量较低的应用，使用价值不高。5、使用snarks，需要可信初值设置。</td></tr><tr><td>validium</td><td>是一条区块链，数据链下存储，使用零知识证明（starks）来保证状态转换的有效性，并设立“数据可用性委员会”来保证链下数据的可用性</td><td>1、安全性高。2、资产确认时间短。3、使用starks，不需要可信初值设置。</td><td>1、技术难度高。2、由于采用零知识证明通用计算支持性差，很难支持通用智能合约。3、生成零知识证明和验证零知识证明需要花费额外的计算资源和gas费，每笔交易目前测试结果需要承担273gas。4、由于生成零知识证明需要花费额外的计算资源，因此对于吞吐量较低的应用，使用价值不高。5、由于数据链下存储，为了保证可用性，Validium 需要机构作为监管方，引入了“数据可用性委员会”，因此去中心化程度不够。</td></tr></tbody></table><h2 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h2><p>[1]<a href="https://www.fxtank.com/qukuailian/54613.html">https://www.fxtank.com/qukuailian/54613.html</a>. [状态通道扩容]</p><p>[2]<a href="https://juejin.cn/post/6844903743281070087[%E7%8A%B6%E6%80%81%E9%80%9A%E9%81%93]">https://juejin.cn/post/6844903743281070087[状态通道]</a></p><p>[3]<a href="https://juejin.cn/post/6844903743343820813">https://juejin.cn/post/6844903743343820813</a> [plasma]</p><p>[4]<a href="https://www.tuoniaox.com/news/p-376199.html[plasma+rollups]">https://www.tuoniaox.com/news/p-376199.html[plasma+rollups]</a></p><p>[5]<a href="https://www.jinse.com/blockchain/745163.html[zk-rollups]">https://www.jinse.com/blockchain/745163.html[zk-rollups]</a></p><p>[6]<a href="https://www.chaindd.com/3274523.html[rollups]">https://www.chaindd.com/3274523.html[rollups]</a></p><p>[7]<a href="https://ethfans.org/posts/optimistic-vs-zk-rollup-deep-dive[rollups]">https://ethfans.org/posts/optimistic-vs-zk-rollup-deep-dive[rollups]</a></p><p>[8] <a href="https://www.jinse.com/blockchain/1054349.html">https://www.jinse.com/blockchain/1054349.html</a> [zk不兼容evm]</p><p>[9]<a href="https://www.chainnews.com/articles/231723888331.htm">https://www.chainnews.com/articles/231723888331.htm</a></p><p>[10]<a href="https://www.chainnews.com/articles/641219253225.htm">https://www.chainnews.com/articles/641219253225.htm</a></p><p>[11]<a href="https://www.chainnews.com/articles/945373740757.htm">https://www.chainnews.com/articles/945373740757.htm</a></p><p>[12]<a href="https://www.chainnews.com/articles/970346326094.htm">https://www.chainnews.com/articles/970346326094.htm</a></p><p>[13]<a href="https://picture.iczhiku.com/weixin/message1625468135177.html">https://picture.iczhiku.com/weixin/message1625468135177.html</a></p><p>[14]<a href="https://www.chainnews.com/articles/286073625676.htm">https://www.chainnews.com/articles/286073625676.htm</a></p><p>[15]<a href="https://www.jinse.com/blockchain/750777.html">https://www.jinse.com/blockchain/750777.html</a></p><p>[16]<a href="http://westar.io/blog/rollup/">http://westar.io/blog/rollup/</a></p><p>[17]<a href="https://www.jinse.com/blockchain/798070.html">https://www.jinse.com/blockchain/798070.html</a></p><p>[18]<a href="https://ethfans.org/posts/zkrollup-vs-validium-starkex">https://ethfans.org/posts/zkrollup-vs-validium-starkex</a></p>]]></content>
      
      
      <categories>
          
          <category> 调研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Layer2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>跨链技术</title>
      <link href="/2021/10/20/%E8%B7%A8%E9%93%BE%E6%8A%80%E6%9C%AF/"/>
      <url>/2021/10/20/%E8%B7%A8%E9%93%BE%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是跨链技术？"><a href="#什么是跨链技术？" class="headerlink" title="什么是跨链技术？"></a>什么是跨链技术？</h2><p>跨链，指跨过链与链之间的障碍进行直接交互，在保证价值守恒的前提下，实现不同区块链之间的资产流通和价值转移。</p><span id="more"></span> <h2 id="跨链的常见互操作类型："><a href="#跨链的常见互操作类型：" class="headerlink" title="跨链的常见互操作类型："></a>跨链的常见互操作类型：</h2><h3 id="跨链资产兑换："><a href="#跨链资产兑换：" class="headerlink" title="跨链资产兑换："></a>跨链资产兑换：</h3><p>资产兑换即将一条链上资产兑换成等值的另一条链上资产。</p><h3 id="跨链资产转移："><a href="#跨链资产转移：" class="headerlink" title="跨链资产转移："></a>跨链资产转移：</h3><p>资产转移则是将链上的资产转移至另一条区块链上，即需要将原有链上的资产进行锁定，并在另一条链上重新铸造等量等值的资产，以此来实现资产转移。</p><h3 id="跨链任意数据："><a href="#跨链任意数据：" class="headerlink" title="跨链任意数据："></a>跨链任意数据：</h3><p>即两个区块链上的智能合约内的任意数据进行转移互通。</p><h2 id="跨链技术的发展历史："><a href="#跨链技术的发展历史：" class="headerlink" title="跨链技术的发展历史："></a>跨链技术的发展历史：</h2><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.78z22jouib00.png" alt="图片源自[1]"></p><p>早期区块链技术技术的发展基本都是基于单链形式，但是由于单链的性能优化和技术升级存在较大难度，不能满足实际应用需求；因此，大量基于单链扩张的内容被研究，并逐渐过渡到多链协同发展阶段。</p><p>2012 年瑞波实验室提出了InterLedger协议，解决了区块链跨系统之间的协同问题;2013 年Herlihy提出了原子交换的理念，指出在构成一笔完整跨链交易的子交易中只存在2种情况，即成功和彻底失败;2014年BlockSream提出了侧链机制，通过利用双向锚定实现了加密资产在主链与侧链之间的转移，并在此基础上提出了强联邦侧链,这不仅提升了互操作性，还有效地缩减了主链与侧链之间的时延;2015 年比特币闪电网络利用哈希时间锁定机制，实现了比特币链下快速交易，提升了比特币系统的交易效 率;2016 年BTC-Relay利用中继跨链实现了比特币和以太坊之间的单向跨链通信;2017 年，在Cosmos和Polkadot跨链项目中提出了搭建跨链基础平台的方案，以实现兼容所有区块链应用的目的。</p><h2 id="跨链的类型："><a href="#跨链的类型：" class="headerlink" title="跨链的类型："></a>跨链的类型：</h2><p>跨链根据所跨域的区块链底层技术的是否相同分为同构链跨链、异构链跨链。</p><h3 id="同构链跨链："><a href="#同构链跨链：" class="headerlink" title="同构链跨链："></a>同构链跨链：</h3><p>同构链之间的网络拓扑、安全机制、共识算法、区块生成验证逻辑都是一致的，因此同构链之间的跨链交互相对简单。</p><h3 id="异构链跨链："><a href="#异构链跨链：" class="headerlink" title="异构链跨链："></a>异构链跨链：</h3><p>异构链之间的共识机制、网络拓扑存在较大差异，使得异构链的跨链交互相对复杂，但是在实际应用场景中，需要研究的更多的是异构链之间的跨链交互。</p><h2 id="跨链技术的难点："><a href="#跨链技术的难点：" class="headerlink" title="跨链技术的难点："></a>跨链技术的难点：</h2><h3 id="跨链事务管理问题："><a href="#跨链事务管理问题：" class="headerlink" title="跨链事务管理问题："></a>跨链事务管理问题：</h3><p>跨链技术务必要保证在进行资产兑换或者转移时不会发生“双花问题”，即跨链的交易必须同时成功或者同时失败。保证链间交易双方的账本信息同步更新且保持跨链交易的一致性。事实上一个完整的跨链交易可以拆分成若干个子交易，每个子交易在各自所属的区块链系统中进行处理，这些子交易构成一个事务。如果某一子交易执行失败，则必须能回滚撤销之前的子交易，因此跨链技术必须要保证过程中的交易的原子性。</p><h3 id="跨链交易验证问题："><a href="#跨链交易验证问题：" class="headerlink" title="跨链交易验证问题："></a>跨链交易验证问题：</h3><p>跨链交易过程的牵扯到验证主要包含两方面，一是确认交易执行完毕并成功写入区块链账本；二是跨链交易双方在跨链交易过程中能够彼此验证交易的合法性和有效性。但目前的困境在于大部分的区块链系统是相对封闭的，使得链与链之间的的数据交互并不简单，从而验证另一条链中的交易合法性和有效性时一个比较有难度的工作，目前常见的策略为“区块头+SPV”的验证模式。</p><h3 id="跨链交易性能问题："><a href="#跨链交易性能问题：" class="headerlink" title="跨链交易性能问题："></a>跨链交易性能问题：</h3><p>区块链的交易处理能力与可扩展性一直是区块链技术突破的重要方向。区块链系统在达成共识的过程中存在去中心化、安全性和可扩展性的不可能三角问题，使得区块链只能兼顾其中的 2 项。尽管当前某些区块链项目能够达到数百万量级的TPS，但都只有在少量验证节点的前提下才能实现，同时还降低了系统去中心化的特性。随着跨链交易规模的不断扩大， 跨链交易对并发执行速度的性能需求越来越高，使 得跨链交易并发性和可扩展性成为了跨链技术亟待解决的技术难点。</p><h3 id="多链协议适配问题："><a href="#多链协议适配问题：" class="headerlink" title="多链协议适配问题："></a>多链协议适配问题：</h3><p>实现多链互联互通主要从主动兼容和被动兼容 2 个方向进行突破来解决多链协议适配问题。 主动兼容是在已有的异构区块链系统基础之上，研发底层跨链机制，针对已有的区块链的实际应用中开发适用于不同场景的跨链技术，即先有上层不同的区块链应用系统，再进行底层的跨链机制研发，进而实现跨场景的资产流通和价值转移。被动兼容是自底向上，从底层平台入手，先搭建好跨链平台，在此基础上再进行区块链系统的开发，同时还可以提供接口接入更多的区块链系统，共享跨链平台的系统便利。</p><h3 id="锁定资产管理问题："><a href="#锁定资产管理问题：" class="headerlink" title="锁定资产管理问题："></a>锁定资产管理问题：</h3><p>锁定资产管理能够实现链上资产锁定冻结，同时设定区块链上资产锁定和解锁的条件，能够有效地管理交易账户，确保锁定资产的私密性以及交易的安全性，也避免了交易过程中“双花”问题的出现。目前，锁定资产管理主要有智能合约模式、单一托管人模式以及联盟链托管模式。由于其应用场景和使用范围都有一定的局限性，因此跨链技术在锁定资产管理方面还有待进一步突破创新。</p><h3 id="跨链安全保障问题："><a href="#跨链安全保障问题：" class="headerlink" title="跨链安全保障问题："></a>跨链安全保障问题：</h3><p>区块链系统之间进行跨链交互时，如何确保双方系统的安全性是跨链技术研究一大难题。目前主要从适度隔离、检测安全事件 2 个方面进行考虑。适当隔离主要是为了避免当一条链受到攻击时影响整个跨链系统的运行，尽量保持链之间的独立性;检测安全事件是通过具有检测恶意攻击能力的第三方节点来处理跨链事务，使得跨链系统具有类似防火墙的功能。跨链安全保障问题将是跨链技术不断重视的一个技术研究点，也是跨链技术的防护盾，值得进一步深入研究并不断完善。</p><h2 id="目前主流的跨链技术："><a href="#目前主流的跨链技术：" class="headerlink" title="目前主流的跨链技术："></a>目前主流的跨链技术：</h2><h3 id="公证人机制（notary-scheme）："><a href="#公证人机制（notary-scheme）：" class="headerlink" title="公证人机制（notary scheme）："></a>公证人机制（notary scheme）：</h3><p>和传统的交易所工作模式类似，公证人机制是通过引入可信的第三方进行跨链消息的验证和转发。当在不同的区块链系统中进行资产兑换和转移时，选举一个或者多个组织作为公证人来自动或者请求式监听不同链上的事件，并通过特定共识算法对事件是否发生达成共识，最后及时做出响应。 目前，公证人机制根据实现过程中签名方式的差异又分为单签名公证人机制、多重签名公证人机制和分布式签名公证人机制。公证人机制最经典的例子就是Ripple 提出的 Interledger 协议。</p><h4 id="单签名公证人机制："><a href="#单签名公证人机制：" class="headerlink" title="单签名公证人机制："></a>单签名公证人机制：</h4><p>指定单一的独立节点或者机构充当公证人，本质是可以看作是一种中心化的处理方式。</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.53llxns3hy40.png" alt="图片源自[1]"></p><h4 id="多重签名公证人："><a href="#多重签名公证人：" class="headerlink" title="多重签名公证人："></a>多重签名公证人：</h4><p>多重签名公证人机制是在进行交易验证时从公证人群体中随机地选出一部分公证人，然后利用密码学技术来共同完成签名，和单签名公证人机制相比，多重签名公证人弱化了中心化的风险，降低了对公证人可靠性的依赖程度，并且能够保证部分公证人节点遭受攻击时不会影响整个跨链系统的运行。</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image-20211020145238761.1ssfj4olj8io.png" alt="图片源自[1]"></p><h4 id="分布式多重签名公证人："><a href="#分布式多重签名公证人：" class="headerlink" title="分布式多重签名公证人："></a>分布式多重签名公证人：</h4><p>该模式是在多重签名公证人的基础上进行改进而来，采取了安全多方计算中秘密分享协议的思想，将密钥拆分成多个碎片，并随机发给公证人。只有当允许的一定比例的公证人共同完成签名后才可拼凑出完整的密钥，从而实现更加去中心化的跨链交互。</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.12e21ota3hpc.png" alt="图片源自[1]"></p><h3 id="哈希锁定（Hash-locking）："><a href="#哈希锁定（Hash-locking）：" class="headerlink" title="哈希锁定（Hash locking）："></a>哈希锁定（Hash locking）：</h3><p>哈希锁定全称为哈希时间锁定合约（Hash TimeLock Contract），是在无需可信公证人的情况下， 通过哈希锁和时间锁共同完成链间资产兑换的一种跨链技术方案。哈希锁是指对一个哈希值 H，如果提供原像 R 使得 Hash(R) = H，则承诺有效，否则失效；时间锁是指交易双方约定在某个时间内提交才有效，超时则承诺方案失效（无论是提出方或接受方）。时间锁的存在可以保证如果交易因为各种原因未能成功，能够让交易参与各方拿回自己资金，避免因欺诈或交易失败造成的损失。</p><p>哈希锁定起源于比特币闪电网络、目前还应用在以太坊雷电网络、sprites通道。</p><p>通过序贯博弈的纳什均衡策略，可以得出最理性的、双方均收益最大的策略就是按照哈希锁定的步骤诚实执行[6]。</p><p>在实现过程中，发起者首先随机选取秘密值作为哈希解密密钥，然后将秘密值进行哈希计算并将得到的哈希值作为哈希上锁的公钥发送给响应者;发起者和响应者将各自数字资产通过哈希值锁定在智能合约中，同时设置各自的时间锁(通常发起者的时间锁大于响应者的时间锁)，如果在规定时间内双方都提供了秘密值，则合约中锁定的资产将兑换成功，否则，只要有任何一方不能在规定的时间内提供秘密值(哈希解密密钥)，则合约中锁定的资产将被对方收回。哈希锁定的原子互换协议保证了同一条链中的资产总量保持不变， 但哈希锁定的使用范围比较局限，通常只能用于跨链的资产兑换，并不能实现资产的跨链转移。</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.4ts7zpfp7fa0.png" alt="image"></p><p>1、Alice 随机构建一个字符串 s，并计算出其哈希 h = hash(s) ；</p><p>2、Alice 将 h 发送给 Bob 的合约；</p><p>3、Alice 锁定自己的 1 个 BTC 资产，并设置一个较长的锁定时间 t1, 并设置了获取该 BTC 的一个条件：谁能够提供 h 的原始值 s 就可以得到该 BTC;</p><p>4、Bob 观察到 Alice 合约中锁定了一个 BTC, 然后 Bob 锁定自己的 20 个 ETH 资产，并设置一个相对较短的锁定时间 t2 , t2 &lt; t1, Bob 也设置了同样获取条件（谁提供 h 的原始值 s 就可以获取 20 个 ETH）；</p><p>5、Alice 将自己最初生成的字符串 s 发送到 Bob 的合约里取得了 20 个 ETH;</p><p>6、Bob 观察到步骤 5 中 Alice 的 s 值，将其发送给 Alice 的合约成功获取 1 个 BTC; 至此 Alice 和 Bob 完成了资产的交换。</p><p>从上述例子，可以分析出：</p><p>1、进行跨链资产交换的双方必须能够解析双方的合约内部数据，例如 s，例如锁定资产的证明等。</p><p>2、哈希锁定的超时时间设置时需要保证存在时间差，这样在单方面作弊时另一方可以及时撤回自己的资产。</p><h4 id="HTLC协议的改进–HTLAs-Hashed-Time-Lock-Agreements"><a href="#HTLC协议的改进–HTLAs-Hashed-Time-Lock-Agreements" class="headerlink" title="HTLC协议的改进–HTLAs(Hashed Time-Lock Agreements):"></a>HTLC协议的改进–HTLAs(Hashed Time-Lock Agreements):</h4><p>该协议是 Interledger 提出的基于 HTLC 的泛化协议，目标是不管区块链账本是否支持 HTLC 协议，不管其是分布式区块链还是中心化账本，系统和系统之间都能使用 HTLAs 实现跨链交换，并且支持多个系统之间的多跳跨链互换。HTLAs 根据系统支持的功能性主要可区分成四种：</p><p>条件支付通道（Conditional Payment Channels with HTLC）：此种协议需要区块链账本支持 HTLC 条件支付通道，并可以在交易结束后更新通道余额。闪电网络的 HTLC 机制属于这类。交易参与者需要在区块链上预先支付一笔资金至双方共有的临时账户中 (即通道余额)。当交易开始时，发送者会发送一个带有哈希锁和时间锁以及附带签名的更新到接收者。若接收者能在约定时间内告知哈希锁的原像，则可从账户中获取资金，并且发送者与接收者需要同时签名确认共有账户的余额变动。由于交易的传输和处理时间会被计算在交易时间范围内，所以该种协议更适合支持高速交易的区块链系统。</p><p>链上持有 / 托管 (On-Ledger Holds/Escrow with HTLC)：此种协议需要区块链支持 HTLC 协议，并且费率低、交易速度快、吞吐量高。以太坊和 Ripple 第三方托管合约属于此类。交易参与者可以直接通过 HTLC 协议发起跨链交易。交易发起者将要传输的资金先放到区块链提供的特定持有账户中，并且附带哈希锁和时间锁。只有当接收者在约定时间前能提供正确的哈希原像，区块链才将资金发送给接收者，否则区块链会把资金退回给发送者。只要区块链是可信赖的，这种方式可由区块链全权控制交易状态，交易双方没有额外风险。它与条件支付通道的差异是，交易参与者是将资金存放在区块链账户，而非双方共有账户。</p><p>简单支付通道 (Simple Payment Channels) ：简单支付通道的特点是交易双方可以合并多个交易而只清算最终账户的净轧差。简单支付通道交易发生在链下而非链上，且双方需要在同一区块链上拥有账户。交易分为以下三个阶段 : 设立阶段、状态更新阶段以及清算阶段。简单支付通道要求其中一方或双方需要将一定数量的资金托管在一个暂时性且共享的支付通道中。通过简单支付通道可以节省交易费。</p><p>信任线 (Trustlines)：信任线是交易双方凭借信任基础进行的一种交易方式。信任线交易发生在链下而非链上，只有最后清算在链上发生。交易可以分为以下三个阶段 : 设立阶段、状态更新阶段以及清算阶段。想要开始一个信任线交易。Alice 首先需要设定 Bob 的信任线额度，这个信任线额度关系到 Bob 可以在双方的信任线做的交易额度而无须清算。信任线和简单支付通道的主要有两个差异 : 一是在信任线机制下，交易双方无须存一笔保证金至通道，可以以最初设定的余额进行逐笔交易，相当于信用交易。二是一旦交易总金额超过双方信任线额度，或是双方同意清算，便可以直接进行一笔链上转账结束交易。而在简单支付通道机制下，任何一方均可主动结束交易，不需双方同意。</p><h3 id="侧链-中继（side-chain-relay）"><a href="#侧链-中继（side-chain-relay）" class="headerlink" title="侧链/中继（side chain/relay）:"></a>侧链/中继（side chain/relay）:</h3><p>该类技术是一种能够自行检验交易数据且具有可扩展性的跨链技术。</p><p>侧链是相对于主链而言的，主链不知道侧链的存在，但侧链知道主链的存在，并且能够验证和解析主链中的区块数据和账本数据。当主链上需要处理较多的事务或者出现性能瓶颈时，可以将主链上的资产转移到侧链上处理，进而减轻主链上的压力，达到扩展主链功能和性能的目的。侧链实现的核心原理是双向锚定（two-way peg）技术，即跨链双方互埋对方情节点，实现互相读取对方链上的信息，这种情况下两条链均成为了彼此的侧链，两个方向都有relayer负责向对方传递消息。双向锚定技术目前可以通过单一托管模式、联盟模式、SPV 模式、驱动链模式和混合模式来实现。</p><p>单一托管模式：单一托管模式是实现双向锚定最简单的方式， 其基本原理与单一公证人机制相同。交易参与方把资产发送给托管方，托管方在侧链上将相应资产发送给交易方侧链账户。</p><p>联盟模式：使用公证人联盟的形式作为资产托管方，利用多重签名的方式来减少单中心的风险。</p><p>驱动链模式：驱动链概念是由 Bitcoin Hivemind 创始人 Paul 提出的。在驱动链中，交易处理节点代表公证人组的角色，负责资金托管和解锁。交易处理节点把其他链上的资产锁定信息提交到区块中，发起提案， 经过投票与确认之后，在当前链上解锁指定资产。</p><p>SPV模式：内容过长，在附录中描述。</p><p>现今最大的侧链跨链应用是 BTCRelay，其具体实现方式是增加一段部署在以太坊上的智能合约，使以太坊可以验证比特币的区块头，通过验证比特币自身的SPV证明，实现对比特币区块上交易真实性的确认。缺陷在于仅支持以太坊和比特币之间得到跨链，而且不能让比特币同时读取以太坊区块链的信息，因此BTCRelay的通信是单向的。</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.sc0641sco7k.png" alt="image"></p><p>1、Bob 将 20ETH 发送到 BTCSwap 的合约进行冻结；(该合约只要能够确认 BTC 网络上 Bob 接收到来自 Alice 1BTC 就自动将 20ETH 转给 Alice)；</p><p>2、Alice 确认 Bob 冻结信息后，将 1 BTC 转给 Bob 比特币账户；</p><p>3、BTC Relayer 将比特币区块头推送到 BTCSwap 合约；</p><p>4、Alice 接下来就可以调用 relay tx;</p><p>5、BTCSwap 合约结合 tx 和 BTC 链的区块链进行 SPV 验证，验证通过则将 20ETH 转给 Alice 以太坊地址。</p><p>中继是从各主链抽象分离出来的一个跨链操作层，其它所有链都和中继链建立连接，减少连接数和成本，避免受到主链的技术限制，保持中立的同时也能为自身项目积累价值，此外中继链提供的统一的语言，仅通过中间人收集 2 条链之间的数据状态进行自我验证，可减少链路之间通信的安全隐患，适用于链接 2 个异构或同构区块链。由于中继跨链模式需要等待信息上链，因此其效率较低。</p><p>两者在实现过程中均需要采集原链上的信息，但两者在从属关系、执行过程、安全性方面也存在较大差异。在从属关系上，侧链从属于主链，交易被限定在主链和侧链之间，主要侧重于优化区块链的可扩展性;中继没有从属关系，采用中心辐射的设计，不从属于某条主链，更像是“调度中心”，着重于跨链数据的传输。从执行过程看，由于侧链处理交易过程中需要同步所有的区块头，因此侧链的速度比中继慢。在安全性方面，侧链和主链的安全性机制是独立的，由于侧链的安全性是建立在侧链能持续激励矿工进行交易一致性验证的基础之上的，所以主链的安全性并不能在侧链上起作用;中继完全是由主链自行验证。</p><h4 id="polkadot："><a href="#polkadot：" class="headerlink" title="polkadot："></a>polkadot：</h4><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.78h4xn9x1jc0.png" alt="image"></p><p>polkadot中有三种链：</p><p>1、中继链（Relay chain）: 中继链位于 Polkadot 的体系的核心地位，主要是为整个系统提供统一的共识和安全性保障；</p><p>2、平行链（Parachain）: 在Polkadot中平行链负责具体的业务场景，平行链自身不具备区块的共识，它们将共识的职责渡让给了中继链，所有平行链共享来自中继链的安全保障，中继链是 Polkadot 组成的一部分；</p><p>3、桥接链：桥接链指的是非 Polkadot 体系之外的区块链，如 Bitcoin, Ethereum， 这些区块链有自身的共识算法，它们通过不同的 Bridge 与 Polkadot 连接在一起进行跨链交互。</p><p>polkadot中有四种角色：</p><p>1、验证者(Validator): 验证者负责 Polkadot 的网络出块，会运行一个中继链的客户端，在每一轮区块产生中会对其提名的平行链出的块进行核验。当平行链的跨都被他们的子验证者集合确定好之后，验证者们会将所有平行链区块头组装到中继链的区块并进行共识。</p><p>2、核验人(Collator): 帮助验证者收集、验证和提交备选平行链区块，维护了一个平行链的全节点。</p><p>3、钓鱼人(Fisherman):钓鱼人主要靠检举非法交易或者区块以获取收益；</p><p>4、提名人(Nominator): 拥有 stake 的相关方，维护和负责验证者的安全性。</p><p>polkadot跨链交易的过程如下：</p><p>1、A 链将跨链交易放到自己的 engress(每个平行链有一个消息输出队列 engress 和一个消息输入队列 ingress);</p><p>2、A 链的 Collator 收集 A 链的普通交易以及跨链交易并提交给 A 链的验证者集合；</p><p>3、A 链的验证者集合验证成功，将本次 A 链的区块头信息以及 A 链的 engress 内信息提交到中继链上；</p><p>4、中继链运行共识算法进行区块确认以及跨链交易路由，中继链上的验证者会将 A 链的相应交易从 A 链的 engress queue 中移动到 B 链的 ingress queue 中。</p><p>5、B 链执行区块，将 ingress queue 中相应交易执行并修改自身账本。</p><p>由于所有平行链的共识同步发生（中继链区块示意图如下），因此polkadot跨链交易不会有诸如双花等安全性问题。</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.42wbjsutc080.png" alt="image"></p><h4 id="cosmos："><a href="#cosmos：" class="headerlink" title="cosmos："></a>cosmos：</h4><p>cosmos目前仅支持资产的跨链，其网络拓扑架构可以分为Zone和hub两部分，Zone相当于polkadot里的平行链，hub相当于polkadot里的中继链。由 Hub 追踪记录各个 Zone 的状态，而每一个 Zone 有义务不停地把自身产出的新区块汇报给 Hub 。类似地，每一个 Zone 也需要同步 Hub 的状态，Zone与hub之间通过 IBC (inter-blockchain communication protocol) 协议进行通信。</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.crg633zoxqo.png" alt="image"></p><p>为了方便zones平行链对开发，cosmos提供了tendermint和cosmos sdk，其中tendermint是对网络层和共识层的的封装，cosmos sdk则是对应用层的封装：</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.12qd4uxqihts.png" alt="image"></p><p>cosmos中各个平行链之间跨链必须要满足两个前置条件：</p><p>1、快速确定性（fast finality）：该特性由tendermint中的共识算法保证，即 Cosmos 中的跨链不直接支持概率确定模型的区块链，比如基于POW算法的比特币和以太坊，这些区块链产生的新区块是概率最终性的，是有可能发生回滚的，因此不能直接使用cosmos中的跨链需要使用peg Zone作为中转。</p><p>2、强监管性（sovereignty）：每个平行链都具 备一组验证者能够决定其出块。</p><p>cosmos中同构链的跨链：</p><p>1、Zone1 发起一笔 IBC BlockCommitTx 交易，将其区块的头部信息 h 以及所有验证人的公钥信息传递到 Hub 上。</p><p>2、Zone1 执行该笔交易，将相关的资产进行销毁或锁定，并将该笔交易写入egress中，这一点类似于polkadot</p><p>3、Zone1 的中继程序将egress中的交易生成默克尔证明用于 Hub 对交易的验证，并作为 IBC PacketTx 的一部分发送到 Hub。</p><p>4、Hub 中的验证者验证默克尔证明是否有效， 若有效则发送消息给 Zone2（Hub 给 Zone2 发送消息的过程重复上述步骤）。</p><p>5、Zone2 在接收到 Hub 发送的跨链交易后，验证其为 Zone1 发起的真实有效交易，并发送消息给 Hub 确认可接收 Zone1 的资产。</p><p>6、Hub 给 Zone2 发送消息，将资产发送给Zone2，本质上是跨了两次链（Zone1-hub，hub-Zone2）。</p><p>cosmos中异构链的跨链：</p><p>异构链跨链采用PegZone作为中转，PegZone本身是一条用Tendermint开发的区块链，可以实时跟踪原始链的状态，通过设定一个安全阀值，等待原始链区块增长数达到安全阀值时就认为原始链的状态达到了伪快速确定性（回滚概率小），这点和轻客户端钱包验证是相同的原理，例如比特币安全阀值通常设置为6，以太坊安全阀值可以设置为20或者100。而PegZone本身具备快速确定性，就可以通过IBC与Hub相连，从而实现跨链。</p><p>如果以太坊中的用户要把资产转移到 Cosmos 中，首先需要在以太坊上部署一个用于资产托管的智能合约，在智能合约中可以编写跨链交互的规则与逻辑，并负责跨链交易的处理。当用户需要转账到 Cosmos 时，可以先将以太坊中的 ETH 转移到资产托管智能合约中，ETH 转移到合约后将被锁定，如果跨链交易失败，那么系统将被回退到交易执行前的状态。或者当资产托管智能合约检测到 Cosmos 有跨链交易时将资产转移到以太坊，那么合约中将解锁相应的资产。当跨链交易被 Peg Zone的验证节点接收时，将对以太坊发送给资产托管智能合约的交易进行验证。 验证通过后将在 Peg Zone 内生成对应的 CosmosETH（SPV 验证）。将 Cosmos-ETH 转移到以太坊的过程也类似，不过 Peg Zone 转到以太坊的 Cosmos-ETH 将被销毁，而冻结在资产托管智能合约中的 ETH 会被解锁，并转移到用户指定的账户。</p><p>侧链/中继跨链模式可以在链中创建智能合约，该智能合约将发起链的区块头为输入，使用发起链内的标准检验方式来检验区块链是否满足共识算法规范要求。侧链/中继以轻客户端验证技术为基础，即在跨链交互的过程中，在一条链上执行类似区块链轻客户端功能的智能合约，通过另一条链的加密哈希树以及区块头来验证链间的某项特定交易、事件或状态信息是否发生。</p><h3 id="分布式私钥控制（distributed-private-key-control）："><a href="#分布式私钥控制（distributed-private-key-control）：" class="headerlink" title="分布式私钥控制（distributed private key control）："></a>分布式私钥控制（distributed private key control）：</h3><p>分布式私钥控制通过分布式节点控制各种资产的私钥，并将原链资产映射至跨链中，确保各种资产在区块链系统中实现互联互通。分布式私钥控制的核心在于分布式控制管理，即将资产的所有权和使用权分离，在原链上数字资产的控制权安全地转移至非中心化系统中，优势在于可以比较好的支持多种币的交互。</p><p>基于分布式私钥控制的项目有wanchain、Fusion、EKT。</p><p>阅读各类文献资料之后，个人分布式私钥控制严格意义上并不能算是一种独立的跨链技术，本质上分布式私钥控制类似于公证人机制中的分布式多重签名公证人，只是将私钥采用安全多方计算中秘密分享（secret sharing）的思想，分给多个验证人而已，结合下面的例子，将为大家讲述一下分布式私钥的过程：</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.q1zfivq89o0.png" alt="image"></p><ol><li>A账户和B账户同时向分布式密钥网络系统（比如上文提到的Fusion，wanchain）发出跨链申请。</li><li>系统生成账户C，产生对应的公钥和私钥，公钥就是C的地址。<strong>其中将私钥分为N份，然后分发给N个分布式网络中参与者，参与者每人掌握一部分私钥。</strong></li><li>系统将C的地址发送给A。</li><li>A账户在比特币链中实现交易A—&gt;C(1BTC)，交易在一段时间的等待期后被收集写进区块链中。并在后续有连续的多个区块确认。</li><li>此时，系统开始检查账户C中的金额是否是B账户所要求的金额(是否符合当时汇率)。验证通过后，即达成了对A的锁定。</li><li>系统再生成账户D产生对应的公钥和私钥，公钥就是D的地址。同样的，<strong>其中将私钥分为N份，然后分发给N个分布式网络中参与者，参与者每人掌握一部分私钥。</strong></li><li>系统将D的地址发送给B</li><li>在以太坊中B-&gt;D(10ETH).同样的要等待多个确认。</li><li>此时，系统开始检查账户D中的金额是否是A账户所要求的金额(是否符合当时汇率)。验证通过后，即达成了对B的锁定。</li><li>系统将分布式系统中D账户的私钥收集起来，可能达到K个私钥就可以恢复出这个完整的私钥了(k &lt; N),将私钥交给A，<strong>A就有了在以太坊链上的10ETH使用权</strong>。同样的，系统将分布式系统中C账户的私钥收集起来，可能达到K个私钥就可以恢复出这个完整的私钥了(k &lt; N),将私钥交给B，<strong>B就有了在比特币链上的1BTC使用权。</strong></li></ol><h3 id="公证人-侧链混合机制（notary-scheme-sidechains-mixing-technology）："><a href="#公证人-侧链混合机制（notary-scheme-sidechains-mixing-technology）：" class="headerlink" title="公证人+侧链混合机制（notary scheme+sidechains mixing technology）："></a>公证人+侧链混合机制（notary scheme+sidechains mixing technology）：</h3><p>通过侧链技术提高区块链系统间高效通信的效率，利用公证人机制实现资产跨链，进而支持跨链资产交互、跨链合约以及资产抵押</p><h3 id="以上技术方案对比："><a href="#以上技术方案对比：" class="headerlink" title="以上技术方案对比："></a>以上技术方案对比：</h3><p>在互操作性方面，哈希锁定是一种交叉依赖关系，相对于其他几种跨链模型存在明显的不足;在信任模型方面，公证人机制需要多处可信第三方作为公证人，容易造成中心化，而其他几种跨链模型不存在这方面问题;在跨链交易处理方面，哈希锁定的局限性比较大，大多数情况下能支持跨链资产兑换，不支持跨链资产转移， 而其他几种跨链模式都能较好地支持跨链交易的相关操作;在多币种智能合约方面，只有分布式私钥控制技术能够得到有效的支持，其他几种跨链模式都还有待优化完善; 在技术安全与性能方面，公证人模式、侧链/中继模式的安全性都比较低，交易速度也还有待提升，公证人+侧链混合模型在安全性和交易速度方面都较好，但实现难度较高</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.6rr12h296hk0.png" alt="图片源自[1]"></p><h2 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h2><h3 id="SPV（Simplified-Payment-Verification）-5-："><a href="#SPV（Simplified-Payment-Verification）-5-：" class="headerlink" title="SPV（Simplified Payment Verification）[5]："></a>SPV（Simplified Payment Verification）[5]：</h3><p>SPV就是在轻节点的情况下，验证区块链网络中一笔交易的有效性。但是轻节点是没有保存任何交易的，所以一笔单独的交易时无法通过轻节点确定该笔交易属于哪个区块。SPV的具体过程如下：</p><p>1、首先，轻节点会发起一个专门的确认请求，把这个请求广播给网络上邻近的全节点。</p><p>2、全节点收到交易后，会去搜索这个交易属于哪个区块，然后会运算这个区块的 Merkle Tree，然后以merkle block的形式发送给轻节点 。由于Merkle Tree的性质，所以不需要把整个 Merkle Tree 都发送给轻节点的，而只需要发送跟当前交易相关的部分 Merkle 树即可。</p><p>3、轻节点接收到这个部分 Merkle 树之后，在自己本地在运算一下这个交易的哈希，然后根据部分 Merkle 树上的各个哈希值，一路运算获得 Merkle 根，如果这个值跟自己的区块头中的正好吻合，交易验证就成功了。</p><p>所以整个 SPV 过程是靠全节点帮忙去验证交易的，轻节点自身不能验证交易，但是通过确认其他全节点都接受了这次交易，就间接完成了交易确认。但是，全节点有没有可能反馈一个假的 Merkle Tree 过来呢？答案是不可能。在 Merkle 验证中用一个伪造的交易哈希来得到一个已知的 Merkle 根是不可能的。比特币计算 Merkle 树哈希使用的是 sha256 算法，伪造就相当于去碰撞 sha256 算法了，从概率上分析是根本不可能的。</p><h3 id="侧链与子链-7-："><a href="#侧链与子链-7-：" class="headerlink" title="侧链与子链[7]："></a>侧链与子链[7]：</h3><p>在查阅资料的过程中，发些有一些资料内对于侧链和子链两个概念进行了混淆使用，因此特地在附录中对二者的概念进行区分。</p><p>首先二者都是诞生于对区块链扩容技术的研究。但是子链是没有自己的共识机制和token代币的，其安全性完全依托于主链的安全性；而侧链从本质上讲是一条独立于主链运行的链，有自己的共识机制和token代币。</p><p>其次子链的最终目的是为了扩容，子链通过将交易从主链挪到子链进行，并定期向主链同步最终状态来实现对主链性能的扩容，所以，子链也被称为”提交链”，提交链的叫法比子链的叫法更贴近其技术本质。而扩容的本质是为了节省主链的资源，因此主链并不会花费计算资源实现对子链提交的交易进行验证。所以子链自身需要一个机制在提交时证明其所提交的内容的真实性。其中状态通道，Optimistic Rollup，Arbitrum Rollup 采用欺诈证明的方式来证明，而 Zk Rollup，Validium 则采用零知识证明的方式生成有效性证明。</p><h3 id="基于SPV模式的侧链的发展改进方向"><a href="#基于SPV模式的侧链的发展改进方向" class="headerlink" title="基于SPV模式的侧链的发展改进方向:"></a>基于SPV模式的侧链的发展改进方向:</h3><p>由于只存储区块头，所以spv模式在区块链TPS不高的时候，内存消耗和合约的gas费消耗还不算高，但是在如今区块链TPS越来越高的现在，这二者带来的问题也不容忽视。</p><p>首先一个方向是对SPV模式存储的区块头的内存消耗进行优化。斯坦福大学的 Benedikt Bunz 在论文《FlyClient: Super-Light Clients for Cryptocurrencies》中提出的一种新型轻节点协议FlyClient。通过该协议轻节点不需要存储所有的区块头，而是只需存储最新的区块头。通过“默克尔树”的变体”默克尔山脉（Merkle Mountain Range）“可以随时恢复所有的区块头。</p><p>另一个方向是优化spv验证时的gas费消耗，目前比较主流的方案时zkRelayer 和欺诈证明。前者是链下生成证明提交到链上，后者则是通过激励机制来激励Relayer提交正确的区块。</p><h3 id="cosmos和polkadot对比："><a href="#cosmos和polkadot对比：" class="headerlink" title="cosmos和polkadot对比："></a>cosmos和polkadot对比：</h3><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.y4crhv1yw5c.png" alt="image"></p><h2 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h2><p>[1]区块链跨链技术发展及应用研究综述 </p><p>[2]区块链跨链技术研究 路爱同、赵阔、杨晶莹、王峰。</p><p>[3] <a href="https://cloud.tencent.com/developer/news/840490">https://cloud.tencent.com/developer/news/840490</a></p><p>[4] <a href="https://www.cxyzjd.com/article/weixin_43988498/109284905">https://www.cxyzjd.com/article/weixin_43988498/109284905</a></p><p>[5] <a href="https://happypeter.github.io/binfo/spv">https://happypeter.github.io/binfo/spv</a></p><p>[6] <a href="https://www.chainnews.com/articles/365768981629.htm">https://www.chainnews.com/articles/365768981629.htm</a></p><p>[7] <a href="https://www.chainnews.com/articles/252138338927.htm">https://www.chainnews.com/articles/252138338927.htm</a> </p><p>[8] <a href="https://cointelegraphcn.com/news/is-cosmos-and-polkadots-cross-chain-the-same-thing">https://cointelegraphcn.com/news/is-cosmos-and-polkadots-cross-chain-the-same-thing</a> </p><p>[9] <a href="https://medium.com/@gcc2ge/cosmos%E8%B7%A8%E9%93%BE%E5%8D%8F%E8%AE%AE-b693a171d266">https://medium.com/@gcc2ge/cosmos%E8%B7%A8%E9%93%BE%E5%8D%8F%E8%AE%AE-b693a171d266</a></p><p>[10] <a href="https://learnblockchain.cn/2019/05/21/what-is-cosmos/">https://learnblockchain.cn/2019/05/21/what-is-cosmos/</a></p><p>[11] 区块链跨链技术分析 郭朝、郭帅印、张胜利、宋令阳、王晖</p>]]></content>
      
      
      
        <tags>
            
            <tag> 跨链技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AxieInfinity</title>
      <link href="/2021/10/16/AxieInfinity/"/>
      <url>/2021/10/16/AxieInfinity/</url>
      
        <content type="html"><![CDATA[<h3 id="双币模型："><a href="#双币模型：" class="headerlink" title="双币模型："></a>双币模型：</h3><p>​    Axie与传统游戏的关键区别在于，区块链经济设计被用来奖励我们的玩家对生态系统的贡献。这种新的游戏模式被称为 “Play to Earn”。</p><p>​    Axie必须是有趣的，只有拥有沉浸式的游戏体验，生态系统才能吸引足够的参与者，为网络积累价值。</p><p>​    Axie Infinity中有两种Token：SLP和AXS，双币的模型循环如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211015/image.3rgn53tdt120.png" alt="image"></p><p>​    对NFT的需求才创造出对AXS和SLP等货币的需求，所以对于一个经济的健康发展，要创造出更多的促使玩家持有NFT的理由（Also keep in mind that demand for Axies is ultimately what also drives demand for SLP (and AXS), so creating more reasons to own Axies and making it easier for us to grow are important in a a healthy economy.）[2]</p><span id="more"></span>  <h3 id="SLP（Smooth-Love-Potions）："><a href="#SLP（Smooth-Love-Potions）：" class="headerlink" title="SLP（Smooth Love Potions）："></a>SLP（Smooth Love Potions）：</h3><p>白皮书中宣称Axie不会直接向玩家售卖SLP，也不会为SLP提供流动性（liquidity）[1]</p><p>获得方式：只能通过在PvE冒险模式以及PvP竞技场玩游戏获得[1]</p><p>SLP的用处：</p><p>用于支付两个Axie NFT之间进行繁殖配对的费用：</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211015/image.685fpvctni40.png" alt="image"></p><p>繁殖之后，需要五天的时间来让新的Axie达到成熟状态，成熟之后可以看到该Axie的基因。</p><p>每次繁殖需要花费的SLP的数量取决于该Axie被繁殖的次数</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211015/image.355ypotaw1g0.png" alt="image"></p><h3 id="AXS-Axie-Infinity-Shards"><a href="#AXS-Axie-Infinity-Shards" class="headerlink" title="AXS(Axie Infinity Shards):"></a>AXS(Axie Infinity Shards):</h3><p>AXS是Axie Infinity里的ERC-20治理代币，持有AXS，用户可以玩游戏，质押并参与关键的管理投票。</p><p>下图展示了AXS生态的主要功能即所谓的游玩和质押参与投票：</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211015/image.25wfuni3h4i.png" alt="image"></p><p>AXS分配总量如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211015/image.26otpu838hhc.png" alt="image"></p><p>AXS的总供应量为270,000,000。将在随着预先确定的时间表逐渐释放，从公开销售开始持续65个月。最初的流通供应量被设定为59,985,000，占总供应量的22.22%。</p><h4 id="Play-to-Earn"><a href="#Play-to-Earn" class="headerlink" title="Play to Earn:"></a>Play to Earn:</h4><p>该部分的总供应量为54,000,000，占到总供应量得20%，所有奖励将在在4.5年内逐步解锁。</p><p>方式：</p><p>1、在竞技场赢得比赛</p><p>2、赢得锦标赛</p><p>3、升级自己的土地并与土地进行互动（会在Lunacia玩法玩法中进行详细描述）</p><p>4、使用Axie Infinity市场</p><p>5、繁殖Axies。</p><p>6、后续新上线的其他方式。</p><h4 id="Staking-and-Staking-Rewards："><a href="#Staking-and-Staking-Rewards：" class="headerlink" title="Staking and Staking Rewards："></a>Staking and Staking Rewards：</h4><p>该部分的总供应量为78,300,000，占到总供应量的29%，所有奖励将在5.5年内逐步解锁。</p><p>用户可以质押自己的AXS代币以获得该部分的奖励，并获得社区去中心化治理委员会的投票权。</p><h4 id="Ecosystem-Fund："><a href="#Ecosystem-Fund：" class="headerlink" title="Ecosystem Fund："></a>Ecosystem Fund：</h4><p>该部分的总供应量为21,600,000，占到总供应量的8%，所有奖励将在不少于4年的时间内逐步释放。</p><p>生态系统基金最初将由Sky Mavis核心团队管理，其核心目的是为了发展Axie Infinity社区。随着时间的推移，生态系统基金将被整合到DAO中，投资人将能够投票决定谁应该获得资金。</p><h4 id="Sky-Mavis（游戏开发团队）："><a href="#Sky-Mavis（游戏开发团队）：" class="headerlink" title="Sky Mavis（游戏开发团队）："></a>Sky Mavis（游戏开发团队）：</h4><p>Sky Mavis是Axie Infinity背后的团队，该部分的总供应量为56,700,000，占到总供应量的21%，所有奖励在超过4.5年的时间内逐步释放。</p><h4 id="Advisors："><a href="#Advisors：" class="headerlink" title="Advisors："></a>Advisors：</h4><p>该部分总供应量为18,900,000，占到总供应量的7%，所有奖励将在不少于4年的时间内逐步释放。</p><h4 id="Public-Sale："><a href="#Public-Sale：" class="headerlink" title="Public Sale："></a>Public Sale：</h4><p>该部分总供应量为29,700,000，占到总供应量的11%，该部分不锁仓。</p><h4 id="Private-Sale："><a href="#Private-Sale：" class="headerlink" title="Private Sale："></a>Private Sale：</h4><p>该部分的总供应量为10,800,000，占到总供应量的4%，这些投资者以20%的折扣购买了AXS。20%的private sale代币将在AXS的public sale中解锁。其余的private sale代币将在未来2年内按季度解锁。</p><h3 id="Lunacia玩法："><a href="#Lunacia玩法：" class="headerlink" title="Lunacia玩法："></a>Lunacia玩法：</h3><p>Lunacia，是Axie Infinity中的土地，玩家可以使用各种资源和工艺原料对自己的土地进行升级（升级所需的所有原材料均从游戏中获得[土地本身会定期产生一定的资源，或者通过PVE战胜Chimera也可以获得升级土地所需要的资源]），玩家可以在自己的土地上进行探索可以有机会获得AXS代币，或者使用自己的Axies NFT对公共区域的土地进行占领探索也有可能获得AXS代币[3]。需要注意的是Lunacia一共有90601块土地，每一块土地都是以NFT的形式存在，玩家之间可以自由的交易自己的土地，玩家可以持有的土地的类型和数量可以参考下图：</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211015/image.303idkby1ew0.png" alt="image"></p><p>​        值得一提的是这是land玩法的第一阶段，在Axie Infinity的描述中，第二阶段的目标是吧Lunacia变成一个虚拟世界，玩家可以使用Lunacia SDK创建游戏，并且把游戏部署在自己拥有的土地上。</p><h3 id="Axie-用户规模及长期增长的可持续性"><a href="#Axie-用户规模及长期增长的可持续性" class="headerlink" title="Axie 用户规模及长期增长的可持续性"></a>Axie 用户规模及长期增长的可持续性</h3><h4 id="关键点："><a href="#关键点：" class="headerlink" title="关键点："></a>关键点：</h4><p>1、一个游戏需要玩家。通过简单地玩游戏，社区成员正在为网络增加价值，并应得到奖励，Axie是一种新型的游戏，它奖励玩家在玩游戏和发展生态系统方面所花费的时间和精力。</p><p>2、Axie的货币经济由玩家100%拥有。游戏的开发者没有直接出售游戏物品或副本，而是专注于发展玩家对玩家的经济，并收取小额费用来实现货币化。Axies是由玩家使用游戏中的资源（SLP和AXS）创造的，并出售给新的/其他玩家。你可以把Axie看成是一个拥有真实经济的国家。AXS代币的持有者是获得税收的政府。游戏的发明者/建造者，Sky Mavis，持有所有AXS代币的20%。</p><p>3、游戏资源和物品被NFT化，这意味着它们可以在开放的点对点市场上出售给任何人、任何地方。</p><p>4、通过新的经验，如土地、小游戏，为Axies增加额外的效用。这也为Axies增加了效用，超越了它们在转瞬即逝的元气中的效用。</p><p>5、对Axies的需求最终也推动了对SLP（和AXS）的需求，所以创造更多拥有Axies的理由，让我们更容易成长，对一个健康的经济来说是很重要的。</p><p>6、广告费和赞助费。许多项目已经急于向Axie经济分发奖励和代币。到目前为止，MakerDAO、AAVE和Kyber Network已经向Axie玩家做了实验性的代币投放。Axie已经是世界上最大的了解如何使用区块链技术的人的社区；向这样的社区做广告有巨大的价值。</p><p>7、同样重要的是，许多Axie玩家认为Axie是一个有趣的游戏和一个认识朋友的社交社区。超过50%的Axie玩家喜欢游戏性和社区，而不是经济方面。这些玩家重视通过Axie获得的乐趣和关系，远远高于任何潜在的收入；从长远来看，这些玩家使经济更加强大。</p><p>8、拥有宠物的喜悦.乐趣、休息和放松.交朋友和寻找商业伙伴/导师.学习如何使用一项重要的新技术。没有必要参加付费的 “区块链课程”，赚钱。</p><p>9、通过AXS，Axie Infinity将逐渐发展成为一个社区拥有的分散式组织。这个过程是随着AXS在玩家和押注者之间的分配而发生的，随着时间的推移，Sky Mavis的所有权会变得不那么集中。Sky Mavis团队将能够用锁定的玩赚和押注奖励分配进行投票。这将防止敌对者在发展的早期和关键阶段破坏生态系统。估计，到2023年10月，Sky Mavis将不再拥有多数票。</p><p>10、对NFT的需求才创造出对AXS和SLP等货币的需求，所以对于一个经济的健康发展，要创造出更多的促使玩家持有NFT的理由，在未来我们希望奖励其NFT持有人5%的代币交易和NFT市场交易税。这种创新机制使的NFT持有者只需在他们的钱包中持有NFT，就能获得巨大的被动收入。</p><h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><p>[1]<a href="https://whitepaper.axieinfinity.com/gameplay/breeding">https://whitepaper.axieinfinity.com/gameplay/breeding</a></p><p>[2]<a href="https://whitepaper.axieinfinity.com/gameplay/axie-population-and-long-term-sustainability">https://whitepaper.axieinfinity.com/gameplay/axie-population-and-long-term-sustainability</a></p><p>[3]<a href="https://whitepaper.axieinfinity.com/gameplay/land">https://whitepaper.axieinfinity.com/gameplay/land</a></p>]]></content>
      
      
      <categories>
          
          <category> 调研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gamefi经济模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>选调分享交流会</title>
      <link href="/2021/10/15/%E9%80%89%E8%B0%83%E5%88%86%E4%BA%AB%E4%BA%A4%E6%B5%81%E4%BC%9A/"/>
      <url>/2021/10/15/%E9%80%89%E8%B0%83%E5%88%86%E4%BA%AB%E4%BA%A4%E6%B5%81%E4%BC%9A/</url>
      
        <content type="html"><![CDATA[<h2 id="“初心如磐、薪火相传”选调分享交流活动"><a href="#“初心如磐、薪火相传”选调分享交流活动" class="headerlink" title="“初心如磐、薪火相传”选调分享交流活动"></a>“初心如磐、薪火相传”选调分享交流活动</h2><h3 id="摆世萍（硕士研究生）："><a href="#摆世萍（硕士研究生）：" class="headerlink" title="摆世萍（硕士研究生）："></a>摆世萍（硕士研究生）：</h3><p>​        2018年选调，地点：宁夏 乡镇基层   </p><p>​        目前政策要驻村两年。</p><p>​        要了解选调的地方的风俗人情。</p><h3 id="王锐（硕士研究生）"><a href="#王锐（硕士研究生）" class="headerlink" title="王锐（硕士研究生）"></a>王锐（硕士研究生）</h3><p>​        甘肃选调，生态环境厅。工作一年定级。基层挂职两年</p><p>​        我国最大的不平衡式城乡发展不平衡</p><p>​        三点建议：</p><p>​        1、要找对地方：要选择一个自己去了就不太想走的地方。</p><p>​        2、要找准定位：要对于自身工作职责有一个清晰的定位。要研究清楚三定方案，明确应该做什么，什么不应该做。</p><p>​        3、如何适应基层环境：基层环境艰苦。卫生条件差。涵养三气：接地气，深入群众，多做雪中送炭的事；沉住气，不管什么事情都要控制好自己的情绪，保持好气定神闲；有底气，学习当地的政策，对于国家的大政方针有基本了解，学会思考和总结，提升自己的素养，要在实践中不断的锻炼自己，要勤快。</p><p>​        4、要增加群众对自己的信任，说话做事要言必行行必果，获取群众的信任。</p><h3 id="梁红超（硕士毕业生）"><a href="#梁红超（硕士毕业生）" class="headerlink" title="梁红超（硕士毕业生）"></a>梁红超（硕士毕业生）</h3><p>​    九寨沟青苗党支部、灵华村党支部副书记</p><p>​    一开始分配的市政府办公厅，又被分配到二级单位政务服务大厅综合处工作，负责文秘、机要、后勤等工作。2019年部门合并，成都市政府服务管理和网络理政办公室二级主任科员。2020年12月前往九寨沟基地时间锻炼。</p><p>​    参与选调的原因：</p><p>​        1、一直以来对情节（文科生、喜欢历史）</p><p>​        2、国考、京考（没有考上）</p><p>​        3、北京生活成本</p><p>​        4、地方选调生优势（省委组织部挂名、招募之后高看一眼，厚爱三分）</p><p>​    工作感悟体会：</p><p>​        1、谦虚谨慎、戒骄戒躁、勤学善思。先做人再做事。</p><p>​        2、初心易得、难受始终。</p><p>​        3、敢于抓住机会、不断尝试。</p><p>​        4、敢于斗争、善于斗争。（刀要在事上磨、人要在事上练）</p><p>​        5、要善于总结经验、吸取教训</p><p>​        6、先甜后苦是真苦、先苦后甜是真甜</p><p>​    给学弟学妹的建议：</p><p>​        1、多读书</p><p>​        2、多看多联系多问，有时间可以和成功的选调生多联系多请教，了解政策（不要迷信等级高的单位，实际了解待遇政策）。</p><p>​        3、多练习，考验自己的沟通能力，写文稿，做会务。一定要敢于沟通。</p><p>​        4、四川14年开始选调。不一定要去人扎堆的地方（省会城市等），人才盈余。可以去一些大家去的少地方，领导更偏爱，资源有倾斜，有助于大家发展。</p><h3 id="李勇（博士研究生）"><a href="#李勇（博士研究生）" class="headerlink" title="李勇（博士研究生）"></a>李勇（博士研究生）</h3><p>16级地球与空间科学学院（构造地质学）毕业生 选调青海省 正处级 青海省自然资源厅盐湖管理局局长，矿业权管理处副处长</p><p>做公务员一定要善于沟通，有情商。</p><p>1、为什么要参加选调：</p><p>​    现实需要，是最容易融入陌生城市和站稳脚跟的职业。实现自己的价值需要，学习的专业和从事的职业没有必要的联系，给自己一个新的开始和选择</p><p>2、参加选调要注意什么：</p><p>​    评估自己性格、生活习惯、身体、意志、家庭；了解各省省情，定位、经济、产业、人口、收入、自然地理、以往选调和政策落实情况。</p><p>3、选调后的一些建议</p><p>基层工作很枯燥，认真对待，不犯错误或少犯错误，多听多干（要多解决问题，少提出问题）；及时转变，心态平和，不计较一时得失；要保持正直的处事方式，给领导出正主意；把自己的生活过好</p><h3 id="王忠岩（博士研究生）"><a href="#王忠岩（博士研究生）" class="headerlink" title="王忠岩（博士研究生）"></a>王忠岩（博士研究生）</h3><p>安徽芜湖机要局 通过基层遴选考试到现在的部门工作。工作五年，四年没回家。</p><h3 id="范怡（硕士毕业生）"><a href="#范怡（硕士毕业生）" class="headerlink" title="范怡（硕士毕业生）"></a>范怡（硕士毕业生）</h3><p>深圳水务局</p><p>珍惜在学校的读书机会，一个阶段有一个阶段的任务，要专心学习。</p><p>一定要融入当地环境，学习当地的方言。要主动去融入，才能走进基层，才能更好的为人民服务。</p><p>​    </p>]]></content>
      
      
      
        <tags>
            
            <tag> 选调 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>隐私计算</title>
      <link href="/2021/10/15/%E9%9A%90%E7%A7%81%E8%AE%A1%E7%AE%97/"/>
      <url>/2021/10/15/%E9%9A%90%E7%A7%81%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<h1 id="隐私计算"><a href="#隐私计算" class="headerlink" title="隐私计算"></a>隐私计算</h1><h2 id="隐私计算的定义"><a href="#隐私计算的定义" class="headerlink" title="隐私计算的定义"></a>隐私计算的定义</h2><p>​    隐私计算（privacy-preserving computation）是指在保证数据提供方不泄露原始数据的前提下，对数据进行分析和计算的一系列信息技术，保障数据在流通和融合过程中的“可用不可见“。</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211015/image.9nar13g1snw.png" alt="image"></p><p>​    事实上一个计算过程可以抽象为如图1所示的过程。在这个过程中，数据存储、数据传输、数据计算过程、数据计算结果四个子过程中都有可能产生泄漏隐私数据的风险。针对不同的子过程有着不同的隐私保护计算方案，具体如图2所示：</p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211015/image.3pye0cpwij80.png" alt="image" style="zoom: 200%;" /><p>​    目前所讲到的隐私计算技术，通常针对于后两个子过程，即数据计算过程、数据计算结果。其中，数据计算过程侧重于参与方在整个计算的过程中难以得到除计算结果之外的额外信息；数据计算结果侧重于参与方难以基于计算结果逆推原始输入数据和隐私信息。</p><p>​    从图2可以看出隐私计算并不能简单归属于某一学科领域，而是一套融合了密码学、安全硬件、数据科学、人工智能、计算机工程等众多领域的跨学科技术体系，包含了安全多方计算、联邦学习和可信执行环境等不同技术方案。</p><span id="more"></span>  <h2 id="为什么需要隐私计算？"><a href="#为什么需要隐私计算？" class="headerlink" title="为什么需要隐私计算？"></a>为什么需要隐私计算？</h2><p>​    从社会现状讲：一方面，当前企业对用户的隐私数据处于滥采集、滥用的状态，通过对这些隐私数据的分析不仅可以预测一个人的位置轨迹，甚至可以挖掘出性取向在内的隐私信息，对用户的生命和财产安全造成威胁，并且每年都会发生企业用户信息大规模泄漏的情况。因此隐私计算的出现可以增强数据流通过程对个人标识、用户隐私和数据安全的保护；另一方面，全球数据总量呈指数级增长，海量的数据散落在不同的企业、机构的手中，导致形成了“数据孤岛”现象。多方的数据协作已经成为当下挖掘数据价值的新兴重要路径。但传统的方式无法消除数据持有方对商业机密泄漏、商业利益分配等方面的信任鸿沟，隐私计算技术为数据的融合应用和价值释放提供了新的解决思路。</p><p>​    从国家层面讲：数字经济蓬勃发展，数据安全合规的问题日益严重，为保护公民隐私，我国数据立法进程不断加快，尤其强调数据应用过程中的数据安全。例如欧盟出台《通用数据保护条例 》GDPR、中国出台《个人信息保护法草案》、美国出台《国家安全与个人数据保护法提案》NSPDPA。</p><h1 id="隐私计算的基本技术体系"><a href="#隐私计算的基本技术体系" class="headerlink" title="隐私计算的基本技术体系"></a>隐私计算的基本技术体系</h1><p>目前主流的隐私计算技术分为三大方向：</p><p>​    第一类是以安全多方计算、同态加密等为代表的基于密码学的隐私计算技术，这类技术的思想是通过设计特殊的加密协议或算法，在处理和分析前对数据进行转换，从而支持在加密数据之上直接进行计算。</p><p>​    第二类是以联邦学习为代表的人工智能和隐私保护技术融合衍生的技术，即在分布式的情况下对数据进行处理和分析。</p><p>​    第三类是以可信执行环境为代表的基于可信硬件的隐私计算技术。</p><h2 id="安全多方计算"><a href="#安全多方计算" class="headerlink" title="安全多方计算"></a>安全多方计算</h2><h3 id="百万富翁问题"><a href="#百万富翁问题" class="headerlink" title="百万富翁问题"></a>百万富翁问题</h3><p>​        该问题由图灵奖获得者姚期智院士于1982年通过提出，指的是有两个百万富翁相比较谁更加富有，但是都不想让对方知道自己具体有多少钱。在没有可信第三方的情况下如何进行？</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211015/image.b2awo8th3ok.png" alt="image"></p><h3 id="安全多方计算的概念"><a href="#安全多方计算的概念" class="headerlink" title="安全多方计算的概念"></a>安全多方计算的概念</h3><p>​        安全多方计算（Secure Multi-Party Computation）由图灵奖获得者姚期智院士于1982年通过提出和解答百万富翁问题而创立，是指在无可信第三方的情况下，多个参与方共同计算一个目标函数，并且保证每一方仅获取自己的计算结果，无法通过计算过程中的交互数据推测出其他任意一方的输入数据。</p><p>​        1986 年姚期智院士提出的针对两方计算的混淆电路方法成为构建通用 SMPC 协议的经典方案之一。之后Goldreich在1987年对安全多方计算进行了讨论，提出了可以计算任意函数的计算意义下安全的安全多方计算协议。 Goldreich 还从理论上证明了可以通过通用电路(Universal Circuit)估值来实现所有的安全多方计算协议。其后于1988年，Goldreich对安全多方计算进行了总结和安全性定义。之后在1989年，Beaver等人研究了信息论安全模型下的安全多方科学计算问题，提出了可以实现信息论安全的，复杂程度为常数轮的安全多方算数运算协议。简化的MPC模型如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211015/image.188v9au031z4.png" alt="image"></p><p>​    </p><p>​    安全多方计算是多种密码学基础工具的综合应用，经典的安全多方计算构造方式有混淆电路、秘密分享、不经意传输等。现在的部分安全多方计算协议也采取了同态加密、零知识证明等密码学算法。有时也与可信执行环境等基于硬件的隐私计算技术结合，提供更加安全的方案。</p><p>​    安全多方计算能够在不泄露任何隐私数据的情况下让多方数据共同参与计算，然后获得准确的结果，可以使多个非互信主体在数据相互保密的前提下进行高效数据融合计算，使得数据的所有权和数据使用权的相互分离。</p><p>​    但是安全多方计算目前面临：密码学复杂运算过程造成的计算性能问题，部分原因是跨网络传送加密数据会产生延迟，因此还受到网络带宽方面的制约。不同技术间的加密数据不能互通造成新的数据孤岛问题。</p><h3 id="安全多方计算中涉及到的技术"><a href="#安全多方计算中涉及到的技术" class="headerlink" title="安全多方计算中涉及到的技术"></a>安全多方计算中涉及到的技术</h3><h4 id="混淆电路（Garbled-Circuit）"><a href="#混淆电路（Garbled-Circuit）" class="headerlink" title="混淆电路（Garbled Circuit）"></a>混淆电路（Garbled Circuit）</h4><p>​     该协议思想起源于姚期智院士针对百万富翁问题提出的混淆电路解决方案，因此也被称为“姚氏电路”。混淆电路使用布尔电路构造安全函数进行计算，保证一方输入不会泄露给其他方，计算出结果并能指定结果由那方获得或者是两方以分片形式共有。</p><p>​    混淆电路的核心思想是将任何函数的计算问题转化为由“与”、“或”、“非”门组成的布尔逻辑电路，通过加密和扰乱电路的真值表来掩盖信息，从而实现电路的正常输出而又不泄露计算参与方的私有信息。以最经典的YAO GC为例子即两个参与方：一个是电路混淆方，一个是电路计算方，并且通过AES等对称加密算法进行加密、除此之外扰乱是以门为单位的，下面举一个经典例子：</p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211015/image.5jul0st10r40.png" alt="image" style="zoom:200%;" /><p>​    用户A首先进行混淆电路的构造：给每一条线路生成两个密钥，K0,a代表用户A的输入为0，其它符号的意思类似。然后用户A构造加密真值表并打乱顺序，这就是前面说到的混淆电路的核心思想，在该例子中对应的真值表为：</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211015/image.3lvvhn39cvi0.png" alt="image"></p><p>随机扰乱后的真值表为：</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211015/image.2kd1oz5e92g0.png" alt="image">    </p><p>然后用户A将打乱后的真值表发送给B并且通过不经意传输将K<sub>0,b</sub> K<sub>1,b</sub>也发送过去，用户B根据收到的内容进行电路计算，将解密后的结果发送给用户A，这样就在没有透露实际参与计算数字的情况下完成了一次计算。</p><p>姚氏电路是第一个安全两方计算协议，后续大多数基于混淆电路技术实现的安全多方计算协议都是由姚氏混淆电路进行扩展的。比较常⻅有GMW/CCD/BGW/BMR等,这些协议将姚氏协议支持的两方安全计算扩展到多方安全计算;将布尔电路扩展到算术电路;将安全模型由半诚实模型扩展到恶意模型，以抵抗一定数量恶意敌手攻击。而这些基于姚氏混淆电路进行扩展的协议与方法，大多已不再使用混淆真值表的做法，只保留电路的形式（混淆真值表的计算成本太高，目前通常通过秘密分享和不经意传输的方式取代例如GMW协议）。</p><p>由于任何安全计算函数都可以转换成对应的布尔电路，因此该技术可以实现各种计算，常用于通用计算场景，其只需要一个常数通信轮数，该轮数独立于电路深度。非对称加密的次数取决于输入数据的大小（OT是一次公钥加密操作），对称加密次数取决于电路门的数量。总通信量取决于电路规模，因此混淆电路的方法主要针对于布尔电路（算术电路的混淆导致电路规模增长过快），但大多数情况下混淆电路的规模都不会很小，因此计算过程中的通信量会比较大，适用于高带宽高延迟的场景。</p><p>目前针对混淆电路的改进方向有两个：一方面:电路优化(circuit optimization)，主要是减少编译后电路的规模，常用技术有free -xor/Garbled row reduction/Circuit simplification等;另一方面:执行阶段优化，常用的技术有fast table lookup(减少解密混淆真值表次数)和pipelined circuit execution(将原来电路的产生与执行两阶段转换成一个阶段，一边产生一边执行电路，这样可以提高安全计算的效率)。</p><h4 id="秘密分享（Secret-Sharing）"><a href="#秘密分享（Secret-Sharing）" class="headerlink" title="秘密分享（Secret Sharing）"></a>秘密分享（Secret Sharing）</h4><p>​    该协议最早由Shamir和Blakley在1979年提出。是指将秘密信息拆分成若干秘密份额并分发给参与者分别保存，以此来达到风险分散的目的。秘密分享协议通常由秘密分割算法和秘密重组算法构成，包含秘密分发者、秘密份额持有者还有接收者三类角色。秘密分发者持有秘密信息并且负责执行秘密分割算法，并将秘密份额分发给秘密份额持有者。接收者是试图重组秘密信息的一方。当接收者希望重组秘密信息时，将从一组授权的秘密份额持有者中收集秘密份额，并执行秘密重组算法计算秘密信息，当有充足的秘密份额就可以重新恢复出秘密信息。但秘密分享的价值不仅限于拆分和还原，它的真正价值在于处于分裂态可以运算，而运算的结果在多方参与的情况下可以还原即“同态”的性质，最经典的Shamir秘密分享协议具有加法同态的性质。秘密共享的上述特征，使得它在实际中得到广泛的应用，包括通信密钥的管理，图像加密，投票选举等。</p><p>​    基于组合数学的秘密分享协议：假设n个人中至少有m个才能恢复密文，那么需要将密文拆分为C(n,m-1)份，每个人持有C(n-1,m-1份。</p><p>​    基于多项式的秘密分享协议：将密文设置为多项式的某个点(一般为与y轴的交点，即f(0))，然后根据想要让多少人才能恢复出来，设置成对应的几次多项式（2个人就是直线，3个人就二次曲线，以此类推）。</p><p>​    一个例子：三个人A,B,C进行投票，最终结果只想让被投票者S知道，假设赞成为1，反对为0，本轮投票结果为1，1，0。因此对于S来说这是一个（3，3）的问题。所以需要构造二次曲线多项式：</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211015/image.4z6alq75yxc0.png" alt="image"></p><p>​    则对于S来说需要的密钥为：</p><p>​    <img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211015/image.3j3mzbni50w0.png" alt="image"></p><p>​    由于ABC彼此之间都不知道对方的投票结果，但又需要联合计算得出总的投票结果，所以ABC各自都构建了各自的多项式，并且将自己的密钥成分分发给其他两方。但有一点需要约定，在进行密钥分享时，ABC选取的点横坐标必须是一致的，比如选取x=1,x=2和x=3这三个点。比如把x=1的情况都发给A，x=2的情况都发给B，x=3的情况都发给C，这样ABC分别计算出fs(1)，fs(2)，fs(3)，发给S，S就可以算出结果。    </p><p>​    基于秘密分享的安全多方计算具有计算量小、通信量较低的优点，其通信轮数呈线性关系，因此通常情况通信轮数较多。可以高效的实现加法、乘法、比较等算术运算，但是难以高效进行浮点数运算。通信量少适合低延迟网络。能实现联合统计、建模、预测等多种功能。</p><p>​    目前一些主流的安全多方计算解决方案如（secureML）大多采用的方式是将二者结合，以秘密分享的形式实现加法、减法等简单运算，以混淆电路的方式实现sigmod等复杂的运算。</p><h4 id="不经意传输（Oblivious-Transfer）"><a href="#不经意传输（Oblivious-Transfer）" class="headerlink" title="不经意传输（Oblivious Transfer）"></a>不经意传输（Oblivious Transfer）</h4><p>​    该协议由Rabin于1981年首次提出，最初的不经意传输是“1 out 2不经意传输“，后来经发展成为安全多方计算的重要组成部分，一般被称为 “1 out n不经意传输”，指数据发送方有n个数据，数据接收方接收其选定的一个数据，且不能获取其他数据，同时数据发送方无法知道接收方的选择。是混淆电路设计的基础构件，常由RSA等非对称加密算法构造。</p><p>​    基于公钥密码体制的密码学基本协议，是安全多方计算的基石。最基本的二选一（1-out-of-2）OT 协议的例子如下：假设接收者希望知道结果M1，但不希望发送人知道他想要的是M1。</p><p>​    1、发送者生成两对不同的公私钥，并公开两个公钥S1及S2。</p><p>​    2、接收者会生成一个随机数k，再用S1，对k进行加密，传给发送者。</p><p>​    3、发送者用他的两个私钥S1及S2对这个加密后的k进行解密，用S1解密得到随机数k1，用s2解密得到随机数k2。k1和k相等，而k2则为一无关的随机数。但发送者不知道接收人加密时用的哪个公钥，因此他不知道他算出来的哪个k正确</p><p>​    4、发送者把M1和k1及M2和k2分别进行异或，把两个异或值传给接收者。接收者只能算出M1而无法推测出M2，同时发送人也无法知道他能算出哪一个结果。</p><h4 id="同态加密（Homomorphic-Encryption）"><a href="#同态加密（Homomorphic-Encryption）" class="headerlink" title="同态加密（Homomorphic Encryption）"></a>同态加密（Homomorphic Encryption）</h4><p>​    该技术在1978年由Ron Rivest、Leonard Adleman和Michael L. Dertouzo提出，允许在加密之后的密文上直接进行计算，且计算结果解密后正好与明文的计算结果是相同的。第一个构造出全同态加密的Craig Gentry认为，同态加密的本质是“A way to delegate processing of your data, without giving away access to it.”。同态加密的简化过程由下图所示：</p><p>​    <img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211015/image.55kzufltuyc0.png" alt="image"></p><p>​    目前已发展出各种部分同态加密(Somewhat Homomorphic Encryption)和全同态加密(Fully Homomorphic Encryption)算法。同态加密算法以通信量小、通信轮数少的特点，已在安全多方计算、联邦学习、区块链等存在数据隐私计算需求的场景落地应用。</p><p>​    目前的同态加密实现多为非对称加密算法，即所有知道公钥的参与者都可以加密、执行密文计算，但只有私钥持有者可以解密。</p><p>​    部分同态加密：只能支持有限的密文计算次数，例如 Paillier支持密文间的加法运算， 但是不支持密文间的乘法运算;BGN能够支持无限次密文间的加法 运算，但是只能支持一次密文间的乘法运算。[由于有限计算次数的局限性，并不能完全基于部分同态加密实现一个隐私计算方案，因此多用于实现某个子功能，比如在联邦学习中实现聚合过程]。</p><p>​    全同态加密方案：对密文在计算次数上没有限制。2009年Gentry 首次提出基于理想格的全同态加密方案。2017年提出了支持近似小数计算的CKKS方案。理论上，是完全可以基于FHE设计一个隐私计算方案，但是FHE的计算代价仍然比较高。</p><p>​    同态加密局限性主要体现于：在分析人员希望进行任意计算的情况下不适合使用同态加密。最实用的 SHE 和 FHE 方案基于所谓的基于格的构造，其中研究集中于有效的编码和噪声管理技术。这种类型的加密方案依赖于噪声加密，每次加密操作都会增加此类噪声，如果噪声超过某个阈值，解密将失败。与未加密数据计算相比，同态加密在计算上极为昂贵且吞吐量较低。加密可能会导致数据量大增，这可能会导致严重的带宽问题。同样，计算需要表示为多项式，这在实践中可能是一个限制。对于 FHE，运行时间随着操作次数（加法或乘法）的增加而急剧增加，所以本质上讲最大的缺点就是速度不够快。</p><h4 id="零知识证明（Zero-Knowledge-Proof）"><a href="#零知识证明（Zero-Knowledge-Proof）" class="headerlink" title="零知识证明（Zero-Knowledge Proof）"></a>零知识证明（Zero-Knowledge Proof）</h4><p>​    由S.Goldwasser、S.Micali及C.Rackof在20世纪80年代初首先提出，指一方（证明者）向另一方（验证者）证明一个陈述是正确的，而无需透露除该陈述是正确的之外的其它信息。零知识证明本质上是一种两方或多方的协议，两方或多方通过一系列交互完成生成证明和验证。</p><p>​    一种零知识证明的协议方法需要具备以下三条性质：</p><p>​    1、完备性（Completeness）：若一个证明方确实掌握了某论断的答案，则他肯定能找到方法向验证方证明他手中掌握的数据的正确性，即真的假不了。</p><p>​    2、可靠性（Soundness）：若一证明方根本不掌握某论断的答案，则他无法（或只能以极低概率）说服验证方他手中所谓答案的准确性，即假的真不了。</p><p>​    3、零知识性（Zero-knowledgeness）：验证方除了知道证明的结果外，对其他信息一无所知。</p><p>​    零知识证明构造通常可以分为三部分：</p><p>​    1、证明方先根据论断内容向验证方发个交底材料，这个样例论断需要是随机的或加密的；</p><p>​    2、验证方随机生成一个challenge，发给证明方；</p><p>​    3、证明方根据该试探和交底材料生成证明信息发给验证方。验证方自己将信息和交底材料一合计，判断证明方是否通过了该试探。</p><p>​    第一步的交底材料是非常必要的，它有两个作用：一是可以防止证明方根据试探的内容临时造假；二是可以帮助证明方掩盖敏感信息，保证证明过程的零知识性。第二步的challenge也必须是随机的，否则如果证明方能提前知道试探的内容，那即便他不知道原论断背后的答案他也能提前准备好交底材料和返回的信息。最后，这个过程必须重复多次，因为通过一次或少数试探可能是运气。</p><p>​    以上是通常的交互式零知识证明，但非交互式的零知识证明目前应用的更加广泛。非交互的零知识证明要求证明方自己生成challenge。但若如果challenge的内容可以由证明方提前知道，那么就给了证明方造假的余地。因此既要让证明方能自己生成challenge，又要让证明方无法提前预知challenge。Fiar-Shamir启发法就解决了这个问题，它的思想是证明方将连带交底材料在内的所有已知信息都做一个哈希，并以哈希值作为challenge，生成证明，一起发给验证方。验证方也会验证该哈希值是否正确。如此一来，challenge一方面可以由证明方自己生成，另一方面又因为和其他信息绑定了而无法提前预知。</p><p>​    Zk-snarks就是一个非交互式零知识证明的例子，其思想是任何有限程序都能转换为多项式，这个多项式可以是单变量的，也可以是多变量的，例如函数：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a&gt;<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> b</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    此问题依然可以转换为多项式f(x,y)=(x&gt;0)*y,其中(x&gt;0)可以进一步拆分成多项式。</p><p>​    Zk-Snarks的安全性前提是：不可能找到共享连续段的两条不相等曲线，也就是任何多项式在任意点的计算结果都可以看做是其唯一身份的表示。也就是说只要能证明多项式上的某个随机点就可以证明这个多项式（只有在知道了多项式，才能算出这个点对于的值），这个性质是我们下面所有证明的核心。</p><p>​    利用上述的多项式一致性，可以比较多项式p(x)和t(x)*h(x)：</p><p>​    1、verifier 挑选一个随机值 <em>r</em>, 计算 <em>t</em> = <em>t(r)</em> (即，求值) ，然后将 <em>r</em> 发送给 prover。</p><p>​    2、prover 计算 h(x) =p(x) / t(x) ，并对 p(r) 和 h(r) 进行求值，将计算结果 p, h 提供给 verifier。</p><p>​    3、verifier 验证 p= t⋅h，如果多项式相等，就意味着 t(x) 是 p(x) 的因式。</p><p>​    但是这个协议的缺陷在于prover 知道了 t(r)，他就可以反过来任意构造一个可以整除 t(r) 的 p(r)、除此之外prover 知道了点(r,t(r) · h(r)) 的值，就可以构造经过这一点的任意多项式，同样满足校验。并且这个多项式一致性协议并没有对prover提供的多项式阶数进行约束。所以引入了同态加密，同态加密可以加密后进行运算和未加密相同，所以可以对协议进一步改进。考虑如下加密方式：</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.12fj7ttygq5s.png" alt="image"></p><p>​    利用该性质，可以对上述对多项式一致性协议进行修改，得到如下的内容：</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.lppzhge72h8.png" alt="image"></p><p>这样就可以保证s的不泄漏，但是并不能保证所有的E(S)被使用，即无法保证多项式确实如prover所声称的那样。为了进一步改进这个，实现这一性质，我们采取KEA的策略（即：<strong>Knowledge-of-Exponent Assumption</strong>，实质上就是选择一个随机数，双重验证）。因此可以将上述协议继续改进为：</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.769338rksdo0.png" alt="image"></p><p>​    有了 KEA，就可以约束 prover 只能通过用 verifier 提供的加密值去构造证明了。但是这样verifier 能够从 prover 发送的数据中提取未知多项式 <em>p(x)</em> 的知识。所以可以巧妙的采用上述方法同样的方式加入一个随机值来实现零知识。即：</p><p>​    <img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.5nv4nbvg9s80.png" alt="image"></p><p>​    这样一个交互式的零知识证明就OK了。但是这个证明只能对原始的verifier有效，换一个verifier他就不能信任这个证明，因为verifier 可以和 prover 串通，告诉他密码参数 <em>s</em>, <em>α</em>，有了这些参数 prover 就可以伪造证明，因此prover 就需要分别和每个 verifier 做交互来证明一个陈述。因此<strong>我们就需要一个可以被重复使用，公开，可信，又不会被滥用的秘密参数</strong>。</p><p>​    首先我们不能对 <em>s</em>, <em>α</em>进行加密因为我们使用的同态加密并不可以支持两个加密后的结果相乘。考虑使用ECC椭圆加密来实现配对空间。</p><p>​    <img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.359456wz7go0.png" alt="image"></p><p>​    这样就能够保证加密后相乘了。因此可以构造以下的非交互式零知识证明：</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.6dk3lk3ttjg0.png" alt="image"></p><p>至此，我们总结回顾一下：</p><p>​    保证 prover 的证明是按照规则正确构造的 ——&gt; KEA</p><p>​    保证知识的零知性 ——&gt; “无成本的”δ 变换</p><p>​    可复用证明 ——&gt; 非交互式</p><p>​    非交互中如何设置安全公开且可复用的参数 ——&gt; 参数加密，verifier 借助密码配对进行验证</p><p>​    保证参数的生成者不泄密 ——&gt; 多方的 Setup【每个人各自选择，然后叠加】</p><p>zk-snark的本质就是将这些程序运算转化为多项式的证明。</p><h3 id="安全多方计算的技术的应用："><a href="#安全多方计算的技术的应用：" class="headerlink" title="安全多方计算的技术的应用："></a>安全多方计算的技术的应用：</h3><h4 id="通用安全多方计算："><a href="#通用安全多方计算：" class="headerlink" title="通用安全多方计算："></a>通用安全多方计算：</h4><p>基于秘密共享的安全多方计算：该方案基于秘密分享的方式实现各类通用计算。该方案中间计算值以秘密份额的形式存在。在此基础上进行应用层算法的指令改写，构造安全多方计算的电路，实现秘密份额上的基本运算，如加、乘、比较等。可以高效的算术运算，但是难以高效进行浮点数运算。通信量少适合低延迟网络。</p><p>基于混淆电路的安全多方计算：该方案基于混淆电路的方式实现各类通用计算。该方案的主要特点和混淆电路相同，通用性高但整体性能不高，通信量大，适合于高带宽网络。</p><p>基于全同态加密的安全多方计算：目前该方案处于理论研究阶段，与实用仍存在一定差距。</p><p>流行的安全多方计算解决方案,如 SecureML[Mohassel P, Zhang Y. SecureML: A system for scalable privacy-preserving machine learning[C]. 2017 IEEE Symposium on Security and Privacy (SP), 2017]中，经常采用基于秘密共享的方案实现加法和乘法，而对于更加复杂的执行逻辑(如 RELU、SIGMOID 等)，则采用基于混淆电路的方案。</p><h4 id="特定问题的安全多方计算："><a href="#特定问题的安全多方计算：" class="headerlink" title="特定问题的安全多方计算："></a>特定问题的安全多方计算：</h4><h5 id="隐私集合求交（PSI）："><a href="#隐私集合求交（PSI）：" class="headerlink" title="隐私集合求交（PSI）："></a>隐私集合求交（PSI）：</h5><p>允许参与方使用自己的数据集计算交集，且不会泄露交集以外的任何数据。可用于黑名单共享等场景。根据底层所用技术不同，分为基于公钥加密机制、基于电路、基于不经意传输的三类。</p><p>基于公钥加密机制主流有两种基于Diffie-Hellmann、和基于RSA盲签名。该类隐私集合求交算法的特点是通信复杂度低，缺点是公钥加密的计算开销较大，且计算开销会随着集合规模的增大而增长。但由于其原理的简洁性，目前在工业界应用较为广泛。</p><p>基于电路的集合求交算法：即将所需要的运算转换成电路的形式，由于使用的是通用的安全多方计算框架，具有其它方法所不具有的高拓展性。但同时也具备混淆电路的缺点，即通信量大，计算效率低，电路庞大，占用内存多。</p><p>基于不经意传输的隐私集合求交算法：该类方法的通信复杂度和计算效率都很高，目前学术界的主要研究焦点。</p><h5 id="隐私信息检索（PIR）："><a href="#隐私信息检索（PIR）：" class="headerlink" title="隐私信息检索（PIR）："></a>隐私信息检索（PIR）：</h5><p>隐私信息检索：是客户端从数据库检索信息的一种方法，且数据库无法知道客户端检索的具体信息，保护客户端的隐私安全。隐私信息检索可以看做是“1 out n不经意传输”的弱化版本，区别在于不经意传输只能获得一条信息。</p><p>一类是计算安全的隐私信息检索：通过安全多方计算、不经意传输等技术实现, 可以在单服务器/单数据副本的前提下实现。</p><p>另一类是信息安全前提下的隐私信息检索：要求存在多个服务器, 每个服务器上存有相同的数据副本, 且服务器之间不存在串通合谋的情况。显然这种安全假设在现实生活中很难成立。</p><h4 id="安全多方计算的评价维度："><a href="#安全多方计算的评价维度：" class="headerlink" title="安全多方计算的评价维度："></a>安全多方计算的评价维度：</h4><h5 id="行为模型："><a href="#行为模型：" class="headerlink" title="行为模型："></a>行为模型：</h5><p>根据安全多方计算参与方的可信程度，可将安全多方计算的行为模型分为半诚实敌手模型和恶意敌手模型</p><p>半诚实敌手模型(Semi-Honest Adversary Model)：各参与方严格遵循协议的要求，执行协议要求的各项步骤，但是会尽可能从数据中挖掘其他参与方的隐私。基于半诚实敌手模型的协议有：YAO’s GC（两方）,GMW[4]（多方）,BGW（多方）,BMR（多方）,GESS（两方）。</p><p>恶意敌手模型(Malicious Adversary Model)：恶意参与方试图改变协议甚至采取任意的行为获取其他参与方的隐私。</p><h5 id="安全模型："><a href="#安全模型：" class="headerlink" title="安全模型："></a>安全模型：</h5><p>假设MPC协议的参与方有n个人，感觉参与方是否有合谋可能，可以将安全多方计算的门限分为诚实大多数和不诚实大多数。</p><p>诚实大多数(Honest Majority)：可能合谋的人数小于n/2</p><p>不诚实大多数(Dishonest Majority)：可能合谋的人数大约等于n/2</p><h2 id="联邦学习（Federated-Learning）："><a href="#联邦学习（Federated-Learning）：" class="headerlink" title="联邦学习（Federated Learning）："></a>联邦学习（Federated Learning）：</h2><p>联邦学习本质上是一种分布式机器学习技术，可以使分散的各参与方在不向其他参与者泄漏隐私数据的前提下，协作进行机器学习的模型训练。其核心思想是各个参与方尽量在本地完成建模所需计算，仅在模型需要迭代时进行交互通信。根据参与计算的数据在数据方之间的分布情况不同，可以分为横向联邦学习、纵向联邦学习、联邦迁移学习。</p><p>如何有效协调数据参与方协同构建模型是联邦学习的一项主要工作，因此，根据协调方式的不同，联邦学习从拓扑架构的角度分析，可以分类为集中式拓扑架构和对等网络的架构</p><p>对于集中式的拓扑结构，一般存在一个聚合各方本地模型参数信息的中心计算节点，该节点经过联邦平均等相应算法更新后，将结果返回各方。中心计算节点可以是独立于各参与方的第三方服务器，也可能是某一特定的参与方。但需要考虑中心计算节点泄露隐私或者遭受攻击的安全性问题。</p><p>对等式网络拓扑结构，不存在中心计算节点，各参与方在联邦学习框架中的地位平等，比起集中式的拓扑结构，分布式的网络拓扑结构安全性更高。但分布式拓扑需平等对待联邦学习中的每个参与方且能够使所有参与方有效更新模型并提升性能，设计难度较大。</p><h3 id="横向联邦学习、纵向联邦学习、联邦迁移学习："><a href="#横向联邦学习、纵向联邦学习、联邦迁移学习：" class="headerlink" title="横向联邦学习、纵向联邦学习、联邦迁移学习："></a>横向联邦学习、纵向联邦学习、联邦迁移学习：</h3><p>根据参与计算的数据在数据方之间的特征空间和样本空间的分布情况不同，联邦学习分为横向联邦学习、纵向联邦学习、联邦迁移学习。</p><p>横向联邦学习(Horizontal Federated Learning)：适用于不同参与方数据集的特征空间重叠较多而样本空间重叠较少的情况下，我们把数据集按照样本维度切分，并取出双方特征相同而样本不完全相同的那部分数据进行训练。因此横向联邦学习的本质就是通过扩充样本数目，解决单个参与方的训练数据不足的问题。如不同地区的银行之间进行联邦学习。</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.2s59x6uff0o0.png" alt="image"></p><p>纵向联邦学习(Vertical Federated Learning)：用于不同参与方数据集样本及样本空间重叠较多但特征空间重叠较少的情况，我们把数据集按照特征维度切分，并取出双方用户相同而用户特征不完全相同的那部分数据进行训练。本质上，纵向联邦学习解决了单个参与方数据特征过少或者没有标签的问题。 如同一地区的银行和商场进行联邦学习</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.pdrfmfjalxs.png" alt="image"></p><p>联邦迁移学习(Federated Transfer Learning)：适用于不同参与方数据集的特征空间和样本空间重叠都较少的情况。却希望利用数据提升模型能力，则需要将模型和数据集迁移到同一空间中运算。如不同地区的银行和商场进行联邦学习。</p><p><img src="https://cdn.jsdelivr.net/gh/Rayleigh-Guan/imageshub@master/20211019/image.5tge0u9i8e40.png" alt="image"></p><h3 id="差分隐私（Differential-Privacy）："><a href="#差分隐私（Differential-Privacy）：" class="headerlink" title="差分隐私（Differential Privacy）："></a>差分隐私（Differential Privacy）：</h3><p>该技术由Dwork在2006年针对数据库的隐私泄露问题提出的一种新型密码学手段，该机制是在源数据或者计算结果上添加特定分布的噪音，确保各参与方无法通过得到的数据分析出数据集中是否包含某一特定实体。差分隐私包括本地差分隐私和计算结果差分隐私。本地差分隐私指在汇聚和计算前就加入噪声，用于数据收集方不可信的场景；计算结果差分隐私是指最终计算结果发布前就对其加噪声。</p><p>差分隐私会降低机器学习准确率，较高强度的噪声虽然较好地保护隐私，但对数据分析的准确性也有较大的影响，本地差分隐私引入的误差要比计算结果差分隐私要大得多，在一些人脸识别等准确度要求比较高的情况下是难以接受的。因此如何设计出更好的平衡隐私和可用性的方案也是未来关注的重点。</p><h3 id="联邦学习的挑战："><a href="#联邦学习的挑战：" class="headerlink" title="联邦学习的挑战："></a>联邦学习的挑战：</h3><p>联邦学习过程中出现的数据和模型的隐私泄露和安全攻击如何防护：</p><p>​    梯度数据带来的隐私泄露[8-9]，由于梯度的本质是基于原始输入数据的函数，所以原始数据没有暴露，但是梯度几乎是包含原始数据的，所以一定程度上可以反推其他参与方的原始数据。部分解决方案是采取差分隐私技术，但差分隐私技术是通过给数据添加噪声的方式实现隐私保护，这不仅会导致模型的收敛速度降低，而且会对模型的精度产生损失。</p><p>​    由于联邦学习的本质上是一种分布式机器学习，因此也存在拜占庭将军问题。恶意参与方可以在模型训练阶段进行投毒攻击(Data Poisoning Attacks)以及逃逸攻击(Evasion Attacks)[open ad]，以此来降低模型的性能或者为模型预留后门等，破坏模型的可用性。</p><p>如何对非独立同分布、参差不齐的质量的数据建模</p><p>如何降低通信复杂度以及计算复杂度</p><p>如何评估各参与方的贡献，即联邦奖励机制问题</p><h2 id="可信执行环境（Trusted-Execution-Environment）："><a href="#可信执行环境（Trusted-Execution-Environment）：" class="headerlink" title="可信执行环境（Trusted Execution Environment）："></a>可信执行环境（Trusted Execution Environment）：</h2><p>对TEE的研究起源于1990年代IBM在可编程安全协处理器的开发中。</p><p>通过软硬件方法在中央处理器中构建一个安全的区域，保证其内部加载的程序和数据在机密性和完整性上得到保护。可以说可信执行环境就是一个隔离的执行环境，即TEE与系统其余部分是隔离的，因此操作系统或者管理程序无法读取TEE中的代码。但是TEE可以访问外部的内存。</p><p>TEE的特点在于实际的计算是对未加密的数据执行的，并不需要向数据中添加任何噪声。</p><p>可以完成联合统计、联合查询、联合建模及预测等各种安全计算</p><h3 id="技术方案："><a href="#技术方案：" class="headerlink" title="技术方案："></a>技术方案：</h3><p>x86指令集的Intel SGX技术：该技术由Intel在2010年初推出，是一组与预置在Intel商用计算芯片内的用于增强应用程序代码和数据安全性的指令，主要面向PC端。开发者使用SGX指令把计算应用程序的安全计算过程封装在被称为飞地（Enclave）的容器内，以保证用户关键代码和数据的机密性和完整性。将应用程序以外的软件栈（OS BIOS）都排除在可信计算基意外</p><p>AMD SEV技术</p><p>高级RISC机器指令集架构的TrustZone技术：基于ARM芯片，主要面向移动设备，是用于ARM指令集体系结构的TEE。ARM通过对原有硬件架构进行修改，在处理器层次引入了两个执行环境-安全环境（Secure World）和普通环境（Normal World）。任何时刻处理器仅在其中的一个环境内运行。通过中断路由以及对内存总线和内存管理单元的限制来提供隔离保护。因此该方案等安全性由底层系统来负责。</p><p>兆芯ZX-TCT技术、海光CSV技术</p><h3 id="技术特点："><a href="#技术特点：" class="headerlink" title="技术特点："></a>技术特点：</h3><p>和之前提到的技术方案相比，TEE不会对隐私区域内的算法逻辑语言有可计算性方面的限制，支持更多的算子及复杂算法，且一般不需要网络通信所以不存在网络性能方面的瓶颈。</p><p>TEE支持多层次，高复杂度的算法逻辑实现，运算效率高以及可信度量保证运行逻辑可信。</p><p>不过TEE也有潜在的安全风险：首先是侧信道攻击，因为基于硬件的TEE和操作系统等其它非可信执行环境共享了系统资源，因此恶意攻击者可以根据这些共享资源进行侧信道攻击，并推导可信环境执行内部的机密数据；由于TTE技术本身依赖于CPU等硬件实现，因此必须确保芯片厂商可信。其次由于TEE对服务器型号限制较大必须购买指定的硬件，其功能性、性能和成本均受到硬件限制[4]</p><p>此外使用MPC等密码学技术与TEE技术相结合可以增强其安全性，强化TEE实例之间机密通信和组网的安全性，进一步防止隐私数据泄漏。</p><h1 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h1><p>[1] <a href="https://zhuanlan.zhihu.com/p/144847471">https://zhuanlan.zhihu.com/p/144847471</a></p><p>[2] <a href="https://secbit.io/blog/2019/12/25/learn-zk-snark-from-zero-part-one/">https://secbit.io/blog/2019/12/25/learn-zk-snark-from-zero-part-one/</a></p><p>[3] Advances and Open Problems in Federated Learning(联邦学习中的各种挑战和问题，值得一读)</p><p>[4] <a href="https://zhuanlan.zhihu.com/p/264438249">https://zhuanlan.zhihu.com/p/264438249</a></p><p>[5] <a href="https://m.sohu.com/a/478870037_121124365%EF%BC%88%E4%BF%A1%E9%80%9A%E9%99%A22021%E9%9A%90%E7%A7%81%E8%AE%A1%E7%AE%97%E7%99%BD%E7%9A%AE%E4%B9%A6%EF%BC%89">https://m.sohu.com/a/478870037_121124365（信通院2021隐私计算白皮书）</a></p><p>[6] <a href="https://zhuanlan.zhihu.com/p/264438249">https://zhuanlan.zhihu.com/p/264438249</a></p><p>[7] <a href="https://programingislife.com/%E5%AE%89%E5%85%A8%E5%A4%9A%E6%96%B9%E8%AE%A1%E7%AE%97%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86">https://programingislife.com/安全多方计算相关技术原理</a></p><p>[8] <a href="https://www.wangan.com/p/7fygfga4c3b2629a">https://www.wangan.com/p/7fygfga4c3b2629a</a></p><p>[9] <a href="https://emtemp.gcom.cloud/ngw/globalassets/en/information-technology/documents/insights/top-tech-trends-ebook-2021.pdf">https://emtemp.gcom.cloud/ngw/globalassets/en/information-technology/documents/insights/top-tech-trends-ebook-2021.pdf</a></p><p>[10] <a href="http://www.engineering.org.cn/ch/10.1016/j.eng.2019.09.002">http://www.engineering.org.cn/ch/10.1016/j.eng.2019.09.002</a></p><p>[11] <a href="http://www.jjckb.cn/2021-09/06/c_1310171566.htm">http://www.jjckb.cn/2021-09/06/c_1310171566.htm</a></p><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> 综述 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 隐私计算 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
